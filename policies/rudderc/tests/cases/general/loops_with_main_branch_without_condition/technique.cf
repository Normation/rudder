# @name Loops with conditions
# @version 0.1

bundle agent technique_with_loops_with_main_branch_without_condition {

  vars:
    "report_data.index" int => int(eval("${report_data.index}+1", "math", "infix")),
                           unless => "rudder_increment_guard";
    "local_index"       int => ${report_data.index},
                           unless => "rudder_increment_guard";

    "args"              slist => {};
    "report_param"      string => join("_", args);
    "full_class_prefix" string => canonify("technique_with_loops_with_main_branch_without_condition_${report_param}");
    "class_prefix"      string => string_head("${full_class_prefix}", "1000");

  classes:
    "rudder_increment_guard" expression => "any";

    "pass3" expression => "pass2";
    "pass2" expression => "pass1";
    "pass1" expression => "any";

  methods:
    "index_${local_index}_0" usebundle => call_technique_with_loops_with_main_branch_without_condition_845f731a_2800_41c8_967e_7d1ce89bd1b9_0("Do something", "/home/bob/.vimrc", "845f731a-2800-41c8-967e-7d1ce89bd1b9-0", @{args}, "${class_prefix}", "true", ".vimrc", "/home/bob/.vimrc", "sha256"),
                                    if => "pass3";

    "index_${local_index}_1" usebundle => call_technique_with_loops_with_main_branch_without_condition_845f731a_2800_41c8_967e_7d1ce89bd1b9_1("Do something", "/home/bob/.bashrc", "845f731a-2800-41c8-967e-7d1ce89bd1b9-1", @{args}, "${class_prefix}", "a_condition_evaluated_at_runtime", ".bashrc", "/home/bob/.bashrc", "sha256"),
                                    if => "pass3";

}
bundle agent call_technique_with_loops_with_main_branch_without_condition_845f731a_2800_41c8_967e_7d1ce89bd1b9_0(c_name, c_key, report_id, args, class_prefix, method_call_condition, source, path, hash_type) {

  vars:
    "report_data.index" int => int(eval("${report_data.index}+1", "math", "infix")),
                           unless => "rudder_increment_guard";
    "local_index"       int => ${report_data.index},
                           unless => "rudder_increment_guard";

  classes:
    "rudder_increment_guard" expression => "any";

  methods:
    "index_${local_index}_0" usebundle => _method_reporting_context_v4("${c_name}", "${c_key}", "${report_id}");
    "index_${local_index}_1" usebundle => file_from_shared_folder("${source}", "${path}", "${hash_type}"),
                                    if => "${method_call_condition}";
    "index_${local_index}_2" usebundle => _classes_noop("${report_data.method_id}"),
                                unless => "${method_call_condition}";
    "index_${local_index}_3" usebundle => log_rudder_v4("${c_key}", "Skipping method 'File copy from Rudder shared folder' with key parameter '${c_key}' since condition '${method_call_condition}' is not reached", ""),
                                unless => "${method_call_condition}";

}
bundle agent call_technique_with_loops_with_main_branch_without_condition_845f731a_2800_41c8_967e_7d1ce89bd1b9_1(c_name, c_key, report_id, args, class_prefix, method_call_condition, source, path, hash_type) {

  vars:
    "report_data.index" int => int(eval("${report_data.index}+1", "math", "infix")),
                           unless => "rudder_increment_guard";
    "local_index"       int => ${report_data.index},
                           unless => "rudder_increment_guard";

  classes:
    "rudder_increment_guard" expression => "any";

  methods:
    "index_${local_index}_0" usebundle => _method_reporting_context_v4("${c_name}", "${c_key}", "${report_id}");
    "index_${local_index}_1" usebundle => file_from_shared_folder("${source}", "${path}", "${hash_type}"),
                                    if => "${method_call_condition}";
    "index_${local_index}_2" usebundle => _classes_noop("${report_data.method_id}"),
                                unless => "${method_call_condition}";
    "index_${local_index}_3" usebundle => log_rudder_v4("${c_key}", "Skipping method 'File copy from Rudder shared folder' with key parameter '${c_key}' since condition '${method_call_condition}' is not reached", ""),
                                unless => "${method_call_condition}";

}
