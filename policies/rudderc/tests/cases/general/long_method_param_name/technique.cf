# @name Windows long param names
# @version 0.1

bundle agent Windows_long_param_names {

  vars:
    "report_data.index" int => int(eval("${report_data.index}+1", "math", "infix")),
                           unless => "rudder_increment_guard";
    "local_index"       int => ${report_data.index},
                           unless => "rudder_increment_guard";

    "args"              slist => {};
    "report_param"      string => join("_", args);
    "full_class_prefix" string => canonify("Windows_long_param_names_${report_param}");
    "class_prefix"      string => string_head("${full_class_prefix}", "1000");

  classes:
    "rudder_increment_guard" expression => "any";

    "pass3" expression => "pass2";
    "pass2" expression => "pass1";
    "pass1" expression => "any";

  methods:
    "index_${local_index}_0" usebundle => call_Windows_long_param_names_d86ce2e5_d5b6_45cc_87e8_c11cca71d907("Report if condition", "This should be ReportMessage", "d86ce2e5-d5b6-45cc-87e8-c11cca71d907", @{args}, "${class_prefix}", "This should be ReportMessage", "it_generates_properly");

}
bundle agent call_Windows_long_param_names_d86ce2e5_d5b6_45cc_87e8_c11cca71d907(c_name, c_key, report_id, args, class_prefix, report_message, condition) {

  vars:
    "report_data.index" int => int(eval("${report_data.index}+1", "math", "infix")),
                           unless => "rudder_increment_guard";
    "local_index"       int => ${report_data.index},
                           unless => "rudder_increment_guard";

  classes:
    "rudder_increment_guard" expression => "any";

  methods:
    "index_${local_index}_0" usebundle => _method_reporting_context_v4("${c_name}", "${c_key}", "${report_id}");
    "index_${local_index}_1" usebundle => report_if_condition("${report_message}", "${condition}");

}
