#####################################################################################
# Copyright 2013 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name File lines present
# @description Ensure that one or more lines are present in a file
# @documentation Edit the file, and ensure it contains the defined line(s). Regular expression can be used for the file name.
#
# @parameter path  File name to edit (absolute path on the target node)
# @parameter lines Line(s) to add in the file
#
# 
# @parameter_rename file path
# @class_prefix file_lines_present
# @class_parameter path
# @agent_support = ["cfengine-community", "dsc"]

bundle agent file_lines_present(path, lines)
{
  vars:
      "class_prefix"  string => canonify("file_lines_present_${path}");

  classes:
      "should_report"    expression => "${report_data.should_report}";

      "pass3" expression => "pass2";
      "pass2" expression => "pass1";
      "pass1" expression => "any";

  methods:
    pass3::
      "${report_data.method_id}" usebundle => call_method("file_content");
      "${report_data.method_id}" usebundle => file_content("${path}", "${lines}", "false");
      "${report_data.method_id}" usebundle => call_method_classes("${class_prefix}");
      "${report_data.method_id}" usebundle => call_method_classes_caller;
      "${report_data.method_id}" usebundle => call_method_end("file_content");
      "${report_data.method_id}" usebundle => log_rudder_v4("${path}", "Append content ${lines} if needed into ${path}", "");
}
