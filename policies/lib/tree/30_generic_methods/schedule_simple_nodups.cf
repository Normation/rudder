#####################################################################################
# Copyright 2015 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name Schedule Simple Nodups
# @description Trigger a repaired outcome when a job should be run (avoid running twice)
# @documentation This bundle will define a condition `schedule_simple_${job_id}_{kept,repaired,not_ok,ok,reached}`
#
#  * _ok or _kept for when there is nothing to do
#  * _repaired if the job should run
#  * _not_ok and _reached have their usual meaning
#
#  If the agent is run twice (for example from a manual run), the jo is run only once.
#  However if the agent run is skipped during the period, the job is never run.
#
# @parameter job_id                A string to identify this job
# @parameter agent_periodicity     Agent run interval (in minutes)
# @parameter max_execution_delay_minutes  On how many minutes you want to spread the job
# @parameter max_execution_delay_hours    On how many hours you want to spread the job
# @parameter start_on_minutes      At which minute should be the first run
# @parameter start_on_hours        At which hour should be the first run
# @parameter start_on_day_of_week  At which day of week should be the first run
# @parameter periodicity_minutes   Desired job run interval (in minutes)
# @parameter periodicity_hours     Desired job run interval (in hours)
# @parameter periodicity_days      Desired job run interval (in days)
# 
# @class_prefix schedule_simple
# @class_parameter job_id
# @agent_support = ["cfengine-community"]

bundle agent schedule_simple_nodups(job_id, agent_periodicity,
                                    max_execution_delay_minutes, max_execution_delay_hours,
                                    start_on_minutes, start_on_hours, start_on_day_of_week,
                                    periodicity_minutes, periodicity_hours, periodicity_days)

{
  vars:
    any::
      "old_class_prefix" string => canonify("schedule_simple_${job_id}");

      "args"               slist => { "${job_id}", "${agent_periodicity}", "${max_execution_delay_minutes}", "${max_execution_delay_hours}",
                                      "${start_on_minutes}", "${start_on_hours}", "${start_on_day_of_week}",
                                      "${periodicity_minutes}", "${periodicity_hours}", "${periodicity_days}" };
      "report_param"      string => join("_", args);
      "full_class_prefix" string => canonify("schedule_simple_${report_param}");
      "class_prefix"      string => string_head("${full_class_prefix}", "1000");

  classes:
      "should_report"    expression => "${report_data.should_report}";

  methods:
      "disable_reporting_${class_prefix}"     usebundle => disable_reporting;
    any::
      "simple scheduler"   usebundle => schedule_simple("${job_id}", "${agent_periodicity}", "${max_execution_delay_minutes}", "${max_execution_delay_hours}", 
                                                        "${start_on_minutes}", "${start_on_hours}", "${start_on_day_of_week}",
                                                        "${periodicity_minutes}", "${periodicity_hours}", "${periodicity_days}", "nodups");

      "reenable_reporting_${class_prefix}"    usebundle => enable_reporting,
                             ifvarclass => "should_report";
      "new result classes" usebundle => _classes_copy("${old_class_prefix}", "${class_prefix}");

      "report"             usebundle => _log_v3("Scheduling ${job_id} (with nodups schedule)", "${job_id}", "${old_class_prefix}", "${class_prefix}", @{args});
}

