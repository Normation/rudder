#####################################################################################
# Copyright 2017 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name Sharedfile from node
# @description This method retrieves a file shared from another Rudder node
# @documentation This method retrieves a file shared from a Rudder node using a unique file identifier.
#
# The file will be downloaded using native agent protocol and copied into a new file.
# The destination path must be the complete absolute path of the destination file.
#
# See [sharedfile_to_node](#_sharedfile_to_node) for a complete example.
#
# @parameter remote_node  Which node to take the file from
# @parameter file_id      Unique name that was used to identify the file on the sender
# @parameter_constraint file_id "regex" : "^[A-z0-9._-]+$"
# @parameter file_path    Where to put the file content
#
# @parameter_rename source_uuid remote_node
# @class_prefix sharedfile_from_node
# @class_parameter file_id
# @agent_support = ["cfengine-community"]

bundle agent sharedfile_from_node(remote_node, file_id, file_path)
{
  vars:
      "old_class_prefix"  string => canonify("sharedfile_from_node_${file_id}");
      "args"              slist  => { "${remote_node}", "${file_id}", "${file_path}" };
      "report_param"      string => join("_", args);
      "full_class_prefix" string => canonify("sharedfile_from_node_${report_param}");
      "class_prefix"      string => string_head("${full_class_prefix}", "1000");

      "source"            string => "/var/rudder/shared-files/${g.uuid}/files/${remote_node}/${file_id}";

  files:
      "${file_path}"
        copy_from    => ncf_remote_cp_method("${source}", "${sys.policy_hub}", "digest"),
        classes      => classes_generic_two("${old_class_prefix}", "${class_prefix}");

  methods:
      "report" usebundle => _log_v3("Retrieving ${file_id} from ${remote_node} into ${file_path}", "${file_id}", "${old_class_prefix}", "${class_prefix}", @{args});
}
