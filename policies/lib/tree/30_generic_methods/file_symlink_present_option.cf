#####################################################################################
# Copyright 2014 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name Symlink present (optional overwriting)
# @description Create a symlink at a destination path and pointing to a source target. This is also possible to enforce its creation
#
# @parameter source      Source file (absolute path on the target node)
# @parameter path Destination file (absolute path on the target node)
# @parameter enforce     Force symlink if file already exist (true or false)
#
#
# @parameter_rename destination path
# @class_prefix file_symlink_present
# @class_parameter path
# @agent_support = ["cfengine-community"]

bundle agent file_symlink_present_option(source, path, enforce)
{
  vars:
      "class_prefix" string => canonify("file_symlink_present_${path}");

  classes:
      "pass3" expression => "pass2";
      "pass2" expression => "pass1";
      "pass1" expression => "any";
  files:
    pass3::
      "${path}"
        link_from         => ln_s("${source}"),
        move_obstructions => "${enforce}",
        classes           => classes_generic_two("${report_data.method_id}", "${class_prefix}"),
        comment           => "Create the ${path} symlink pointing to ${source}";

  methods:
    pass3::
      "${report_data.method_id}" usebundle => log_rudder_v4("${path}", "Symlink ${path} targeting ${source}", "");
}
