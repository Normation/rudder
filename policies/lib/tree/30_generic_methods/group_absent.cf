#####################################################################################
# Copyright 2015 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name Group absent
# @description Make sure a group is absent
#
# @parameter name Group name


# @parameter_rename group name
# @class_prefix group_absent
# @class_parameter name
# @agent_support = ["cfengine-community"]

bundle agent group_absent(name)
{
  vars:
      "old_class_prefix"  string => canonify("group_absent_${name}");
      "args"               slist => { "${name}" };
      "report_param"      string => join("_", args);
      "full_class_prefix" string => canonify("group_absent_${report_param}");
      "class_prefix"      string => string_head("${full_class_prefix}", "1000");

  classes:
      "group_present" expression => groupexists("${name}");
      "pass2" expression => "pass1";
      "pass1" expression => "any";

  methods:
    !group_present::
      "success"     usebundle => _classes_success("${old_class_prefix}");
      "success"     usebundle => _classes_success("${class_prefix}");

    pass2::
      "report"
        usebundle => _log_v3("Group ${name} absent", "${name}", "${old_class_prefix}", "${class_prefix}", @{args}),
        ifvarclass => "${old_class_prefix}_reached|${class_prefix}_reached";

  commands:
    group_present.!aix::
      "/usr/sbin/groupdel ${name}" classes => classes_generic_two("${old_class_prefix}", "${class_prefix}");
    group_present.aix::
      "/usr/bin/rmgroup ${name}"   classes => classes_generic_two("${old_class_prefix}", "${class_prefix}");
}
