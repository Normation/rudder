#####################################################################################
# Copyright 2013 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name File download
# @description Download a file if it does not exist, using curl with a fallback on wget
# @rename file_from_http_server
# @deprecated Use [file_from_http_server](#_file_from_http_server) instead.
# @documentation This method finds a HTTP command-line tool and downloads the given source
# into the destination.
# 
# It tries `curl` first, and `wget` as fallback.
#
# @parameter source      URL to download from
# @parameter path        File destination (absolute path on the target node)
#
# 
# @parameter_rename destination path
# @class_prefix file_download
# @class_parameter path
# @agent_support = ["cfengine-community", "dsc"]

bundle agent file_download(source, path)
{
  vars:
      "class_prefix" string => "file_download_${path}";

  classes:
      "pass3" expression => "pass2";
      "pass2" expression => "pass1";
      "pass1" expression => "any";
  methods:
    pass3::
      "${report_data.method_id}" usebundle => call_method("file_from_http_server");
      "${report_data.method_id}" usebundle => file_from_http_server("${source}", "${path}");
      "${report_data.method_id}" usebundle => call_method_classes("${class_prefix}");
      "${report_data.method_id}" usebundle => call_method_classes_caller;
      "${report_data.method_id}" usebundle => call_method_end("file_from_http_server");
      "${report_data.method_id}" usebundle => log_rudder_v4("${path}", "Download ${source} into ${path}", "");

}
