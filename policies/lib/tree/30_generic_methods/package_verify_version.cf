#####################################################################################
# Copyright 2013 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name Package verify version
# @description Verify if a package is installed in a specific version
# @deprecated Use [package_present](#_package_present) in audit mode
#
# @parameter name    Name of the package to verify
# @parameter version Version of the package to verify (can be "latest" for latest version)
# @deprecated Use [package_present](#_package_present) with policy_mode_override set to audit instead
#
#
# @parameter_rename package_name name
# @parameter_rename package_version version
# @class_prefix package_install
# @class_parameter name
# @agent_support = ["cfengine-community"]

bundle agent package_verify_version(name, version)
{
  vars:
      "class_prefix" string => canonify("package_install_${name}");

  classes:
      "pass3" expression => "pass2";
      "pass2" expression => "pass1";
      "pass1" expression => "any";

  methods:
    pass3::
      "${report_data.method_id}_${name}" usebundle => push_dry_run_mode("true");
      "${report_data.method_id}_${name}" usebundle => call_method("ncf_package");
      "${report_data.method_id}_${name}" usebundle => ncf_package("${name}", "${version}", "", "", "present", "");
      "${report_data.method_id}_${name}" usebundle => call_method_classes("${class_prefix}");
      "${report_data.method_id}_${name}" usebundle => call_method_classes_caller;
      "${report_data.method_id}_${name}" usebundle => call_method_end("ncf_package");
      "${report_data.method_id}_${name}" usebundle => pop_dry_run_mode();
      "${report_data.method_id}_${name}" usebundle => log_rudder_v4("${name}", "Verify that package ${name} is installed in version ${version}", "");
}
