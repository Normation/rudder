#####################################################################################
# Copyright 2013 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name File block present
# @description Ensure that a text block is present in a specific location
# @documentation Ensure that a text block is present in the target file.
# If the block is not found, it will be added at the end of the file.
#
# #### Examples:
#
# Given a file with the following content:
# ```
# apple
# pear
# banana
# ```
# Applying the method with the block:
# ```
# pear
# orange
# ```
#
# Will result in the following content:
# ```
# apple
# pear
# banana
# pear
# orange
# ```
#
# @parameter path File name to edit (absolute path on the target node)
# @parameter block Block(s) to add in the file
#
#
# @parameter_rename file path
# @class_prefix file_block_present
# @class_parameter path
# @agent_support = ["cfengine-community", "dsc"]

bundle agent file_block_present(path, block)
{
  vars:
      "class_prefix"       string => canonify("file_block_present_${path}");
      "inner_class_prefix" string => "${report_data.method_id}_inner";

  classes:
      "pass3" expression => "pass2";
      "pass2" expression => "pass1";
      "pass1" expression => "any";

  files:
    pass3::
      "${path}"
        create        => "true",
        edit_line     => ncf_insert_block("${block}"),
        edit_defaults => ncf_empty_select("false"),
        classes       => classes_generic("${inner_class_prefix}");

  methods:
    pass3::
      "${report_data.method_id}" usebundle => _classes_sanitize("${inner_class_prefix}");
      "${report_data.method_id}" usebundle => _classes_copy("${inner_class_prefix}", "${class_prefix}");
      "${report_data.method_id}" usebundle => _classes_copy("${inner_class_prefix}", "${report_data.method_id}");
      "${report_data.method_id}" usebundle => log_rudder_v4("${path}", "Insert text block into ${path}", "");
}
