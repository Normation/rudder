#####################################################################################
# Copyright 2013 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name File copy from Rudder shared folder
# @description Ensure that a file or directory is copied from the Rudder shared folder.
# @documentation Ensure that a file or directory is copied from the Rudder shared folder.
# The Rudder shared folder is located on the Rudder server under `/var/rudder/configuration-repository/shared-files`.
# Every file/folder in the shared folder will be available for every managed node.
# This method will download and update the destination file from a source taken from this shared folder.
# A file in the shared folder will be updated on the node side at agent run.
#
#
# @parameter source      Source file (path, relative to /var/rudder/configuration-repository/shared-files)
# @parameter path        Destination file (absolute path on the target node)
# @parameter hash_type   Deprecated, now ignored.
# @parameter_constraint hash_type "allow_empty_string" : true
#
#
# @parameter_rename destination path
# @class_prefix file_from_shared_folder
# @class_parameter path
# @agent_support = ["cfengine-community", "dsc"]

bundle agent file_from_shared_folder(source, path, hash_type)
{
  vars:
      "class_prefix" string => "file_from_shared_folder_${canonified_path}";

      "audit_arg"    string => "";
    (global_dry_run|dry_run)::
      "audit_arg"    string => "-a";

  classes:
      "pass3" expression => "pass2";
      "pass2" expression => "pass1";
      "pass1" expression => "any";

  methods:
    pass3.!rudder_https_only::
      "${report_data.method_id}" usebundle => call_method("file_from_remote_source_recursion");
      "${report_data.method_id}" usebundle => file_from_remote_source_recursion("/var/rudder/configuration-repository/shared-files/${source}", "${path}", "inf");
      "${report_data.method_id}" usebundle => call_method_classes("${class_prefix}");
      "${report_data.method_id}" usebundle => call_method_classes_caller;
      "${report_data.method_id}" usebundle => call_method_end("file_from_remote_source_recursion");
      "${report_data.method_id}" usebundle => log_rudder_v4("${path}", "Copying ${path} from ${source}", "");

  commands:
    pass2.!pass3.rudder_https_only::
      "promises/download-shared-file -s ${source} -f ${path} ${audit_arg}"
        module => "true";
}
