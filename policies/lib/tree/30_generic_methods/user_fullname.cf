#####################################################################################
# Copyright 2017 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name User fullname
# @description Define the fullname of the user, user must already exists.
# @documentation This method does not create the user.
#
# @parameter login User's login
# @parameter fullname User's fullname
# 
# @class_prefix user_fullname
# @class_parameter login
# @agent_support = ["cfengine-community"]

bundle agent user_fullname(login, fullname)
{
  vars:
      "class_prefix" string => canonify("user_fullname_${login}");
      
  classes:
      "user_exists" expression => userexists("${login}");

      "pass3" expression => "pass2";
      "pass2" expression => "pass1";
      "pass1" expression => "any";

  users:
    pass3::
      "${login}"
             policy => "present",
        description => "${fullname}",
            classes => classes_generic_two("${report_data.method_id}", "${class_prefix}"),
                 if => "user_exists";

  methods:
    pass3.!user_exists::
      "${report_data.method_id}" usebundle => _classes_failure("${report_data.method_id}");
      "${report_data.method_id}" usebundle => _classes_failure("${class_prefix}");
      "${report_data.method_id}" usebundle => log_rudder_v4("${login}", "User ${login} does not exist. Cannot Set user ${login} fullname to ${fullname}", "");
      
    pass3.user_exists::
      "${report_data.method_id}" usebundle => log_rudder_v4("${login}", "User ${login} fullname set to ${fullname}", "");

}

