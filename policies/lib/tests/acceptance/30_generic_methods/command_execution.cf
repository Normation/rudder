#######################################################
#
# Launch the /bin/date command
#
#######################################################

bundle common acc_path
{
  vars:
    "root" string => getenv("NCF_TESTS_ACCEPTANCE", 1024);
}

body common control
{
      inputs => { "${acc_path.root}/default.cf.sub", "${acc_path.root}/default_ncf.cf.sub", "@{ncf_inputs.default_files}" };
      bundlesequence  => { configuration, default("${this.promise_filename}") };
      version => "1.0";
}

#######################################################

bundle agent init
{
  vars:
      "tmp"        string => getenv("TEMP", 1024);

      "command[1]" string => "/bin/date | ${paths.path[egrep]} '[0-9]'";
      "result[1]"  string => "repaired";

      "command[2]" string => "/bin/false";
      "result[2]"  string => "error";

      "command[3]" string => "unknown command";
      "result[3]"  string => "error";

      "command[4]" string => "cd ${tmp} && /bin/touch ${const.dollar}(pwd)/1";
      "result[4]"  string => "repaired";

      # Audit mode
      "command[5]" string => "unknown audit command";
      "result[5]"  string => "na";

      "command[6]" string => "/bin/touch ${tmp}/my_file";
      "result[6]"  string => "na";


      "indices"    slist => getindices("command");
}

#######################################################

bundle agent test
{
  vars:
      "args${init.indices}" slist => { "${init.command[${init.indices}]}" };

  methods:
      # Enforce
      "ph1" usebundle  => apply_gm_v4("command_execution", @{args1}, "${init.result[1]}", "ph1", "enforce" );
      "ph2" usebundle  => apply_gm_v4("command_execution", @{args2}, "${init.result[2]}", "ph2", "enforce" );
      "ph3" usebundle  => apply_gm_v4("command_execution", @{args3}, "${init.result[3]}", "ph3", "enforce" );
      "ph4" usebundle  => apply_gm_v4("command_execution", @{args4}, "${init.result[4]}", "ph4", "enforce" );

      # Audit
      "ph5" usebundle  => apply_gm_v4("command_execution", @{args5}, "${init.result[5]}", "ph5", "audit" );
      "ph6" usebundle  => apply_gm_v4("command_execution", @{args6}, "${init.result[6]}", "ph6", "audit" );
}

#######################################################

bundle agent check
{
  classes:
    "file_1" expression => fileexists("${init.tmp}/1");
    "file_2"        not => fileexists("${init.tmp}/my_file");
    "classes_ok" expression => "ph1_ok.ph2_ok.ph3_ok.ph4_ok.ph5_ok.ph6_ok";

    "ok" expression => "classes_ok.file_1.file_2";

  reports:
    !file_1::
      "The file ${init.tmp}/1 does not exists";
    !file_2::
      "The file ${init.tmp}/my_file exists";
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
}
