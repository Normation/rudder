#######################################################
#
# Test checking if an empty file is generated from a missing local template
#
#######################################################

bundle common acc_path
{
  vars:
    "root" string => getenv("NCF_TESTS_ACCEPTANCE", 1024);
}

body common control
{
      inputs => { "${acc_path.root}/default.cf.sub", "${acc_path.root}/default_ncf.cf.sub", "@{ncf_inputs.default_files}" };
      bundlesequence  => { configuration, default("${this.promise_filename}") };
      version => "1.0";
}

#######################################################

bundle agent init
{
  vars:
    "tmp"                    string => getenv("TEMP", 1024);
    "source_template"        string => "${tmp}/source_template";
    "destination_file"       string => "${tmp}/destination_test";
    "destination_file_canon" string => canonify("${destination_file}");

}

#######################################################

bundle agent test
{
  methods:
    "ph1" usebundle => file_from_template("${init.source_template}", "${init.destination_file}");
}

#######################################################

bundle agent check
{

  classes:

    "file_not_present"            not => fileexists("${init.destination_file}");

    "ok"                   expression => "file_not_present.file_from_template_${init.destination_file_canon}_error";

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
    !file_not_present::
      "File ${init.destination_file} was created from a non-existent template";
}
