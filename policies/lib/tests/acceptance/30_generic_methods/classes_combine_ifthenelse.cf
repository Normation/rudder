#######################################################
#
# This will check that result classes are copied
#
#######################################################

bundle common acc_path
{
  vars:
    "root" string => getenv("NCF_TESTS_ACCEPTANCE", 1024);
}

body common control
{
      inputs => { "${acc_path.root}/default.cf.sub", "${acc_path.root}/default_ncf.cf.sub", "@{ncf_inputs.default_files}" };
      bundlesequence  => { default("$(this.promise_filename)") };
      version => "1.0";
}

#######################################################

bundle agent init
{
  vars:
    "tmp"         string => getenv("TEMP", 1024);
}

#######################################################

bundle agent test
{
  classes:
    "global_true_true" expression => "any",
                       scope => "namespace";

    "global_false_false" expression => "any",
                         scope => "namespace";

  methods:
    
    "ok" usebundle => _classes_success("global_success"); 
    "ko" usebundle => _classes_failure("global_failure"); 

    "test1" usebundle => _classes_combine_ifthenelse("global_true", "success", "failure", "global_classA"); # success
    "test1" usebundle => _classes_combine_ifthenelse("global_true", "failure", "success", "global_classB"); # failure
    "test1" usebundle => _classes_combine_ifthenelse("global_false", "success", "failure", "global_classC"); # failure
    "test1" usebundle => _classes_combine_ifthenelse("global_false", "failure", "success", "global_classD"); # success

    "test1" usebundle => _classes_combine_ifthenelse("global_true", "global_success", "global_failure", "global_classE"); # success
    "test1" usebundle => _classes_combine_ifthenelse("global_true", "global_failure", "global_success", "global_classF"); # failure
    "test1" usebundle => _classes_combine_ifthenelse("global_false", "global_success", "global_failure", "global_classG"); # failure
    "test1" usebundle => _classes_combine_ifthenelse("global_false", "global_failure", "global_success", "global_classH"); # success

    "test1" usebundle => _classes_combine_ifthenelse("global_failure", "invalid", "invalid", "global_classI"); # failure
}

#######################################################

bundle agent check
{
  classes:
      "ok_success"  expression => "global_success_kept.global_classA_kept.global_classD_kept.global_classE_kept.global_classH_kept";
      "ok_failure"  expression => "global_failure_failed.global_classB_failed.global_classC_failed.global_classF_failed.global_classG_failed.global_classI_failed";
      "ok"          expression => "ok_success.ok_failure";

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
}
