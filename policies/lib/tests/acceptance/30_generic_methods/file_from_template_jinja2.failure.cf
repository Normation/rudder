###################################################################################
# Copyright 2016 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @agent_requirements "capabilities": [ "dumpdatastate" ]

#######################################################
#
# Test checking if a file can be generated from a local template
#
#######################################################

bundle common acc_path
{
  vars:
    "root" string => getenv("NCF_TESTS_ACCEPTANCE", 1024);
}

body common control
{
      inputs => { "${acc_path.root}/default.cf.sub", "${acc_path.root}/default_ncf.cf.sub", "@{ncf_inputs.default_files}" };
      bundlesequence  => { configuration, initialization, default("${this.promise_filename}") };
      version => "1.0";
}

#######################################################

bundle agent init
{
  vars:
    "tmp"                    string => getenv("TEMP", 1024);
    "source_template"        string => "${this.promise_filename}.j2";

    "destination_file"       string => "${tmp}/destination_test";
    "destination_file_canon" string => canonify("${destination_file}");

    "test_variable"          string => "test_value";

}

#######################################################

bundle agent test
{
  methods:
    "ph1" usebundle => file_from_template_jinja2("${init.source_template}", "${init.destination_file}");
}

#######################################################

bundle agent check
{
                    

  classes:
    "file present" expression => fileexists("${init.destination_file}"), ifvarclass => "file_from_template_${init.destination_file_canon}_reached";

    "ok"      expression => "!file_present.file_from_template_${init.destination_file_canon}_error";

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL: diff command doesn't returns 0 (command: ${file_diff_test})";

}
