 #######################################################
#
# Read a file into a string
#
#######################################################

bundle common acc_path
{
  vars:
    "root" string => getenv("NCF_TESTS_ACCEPTANCE", 1024);
}

body common control
{
      inputs => { "${acc_path.root}/default.cf.sub", "${acc_path.root}/default_ncf.cf.sub", "@{ncf_inputs.default_files}" };
      bundlesequence  => { configuration, default("${this.promise_filename}") };
      version => "1.0";
}

#######################################################

bundle agent init
{
  vars:
    "tmp"          string => getenv("TEMP", 1024); 
    "commands_1"   string => "print /augeas/load/";
    "commands_2"   string => "get /files/etc/hosts/1/ipaddr";
    "noautoload_1" string => "false";
    "noautoload_2" string => "true";
}
#######################################################

bundle agent test
{
  methods:
    "ph1" usebundle => file_augeas_commands("prefix", "var1", "${init.commands_1}", "${init.noautoload_1}");
    "ph2" usebundle => file_augeas_commands("prefix", "var2", "${init.commands_2}", "${init.noautoload_2}");
    "ph3" usebundle => file_augeas_commands("prefix", "var3", "${init.commands_2}", "");
}

#######################################################

bundle agent check
{
  classes:
    
    "ok_1" expression => "file_augeas_commands_var1_kept.!file_augeas_commands_var1_repaired.!file_augeas_commands_var1_error";
    "ok_2" expression => "file_augeas_commands_var2_kept.!file_augeas_commands_var2_repaired.!file_augeas_commands_var2_error";
    "ok_3" expression => "file_augeas_commands_var3_kept.!file_augeas_commands_var3_repaired.!file_augeas_commands_var3_error";
    "ok_var1" expression => isvariable("prefix.var1");
    "ok_var2" expression => isvariable("prefix.var2");
    "ok_var3" expression => isvariable("prefix.var3");
    "ok_var1_cont" expression => strcmp("${prefix.var1}","/augeas/load");
    "ok_var2_cont" expression => strcmp("${prefix.var2}","/files/etc/hosts/1/ipaddr = 127.0.0.1");
    "ok_var3_cont" expression => strcmp("${prefix.var3}","/files/etc/hosts/1/ipaddr = 127.0.0.1");

    "ok" expression => "ok_1.ok_var1.ok_var1_cont.ok_2.ok_var2.ok_var2_cont.ok_3.ok_var3.ok_var3_cont";

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
}

