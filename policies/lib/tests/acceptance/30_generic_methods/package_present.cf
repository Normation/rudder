#####################################################################################
# Copyright 2016 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @agent_version >=3.7

bundle common acc_path
{
  vars:
    "root" string => getenv("NCF_TESTS_ACCEPTANCE", 1024);
}

body common control
{
      inputs => { "${acc_path.root}/default.cf.sub", "${acc_path.root}/default_ncf.cf.sub", "@{ncf_inputs.default_files}" };
      bundlesequence  => { configuration, initialization, default("${this.promise_filename}") };
      version => "1.0";
}


bundle agent init
{
  files:
      "$(sys.workdir)/modules/packages/."
        create => "true";
      "$(sys.workdir)/modules/packages/test"
        copy_from => local_cp("$(this.promise_dirname)/package.module"),
        perms => m("ugo+x");
}


bundle agent test
{

  methods:
    # version
    "any" usebundle => package_present("package_1", "", "", "test");
    "any" usebundle => package_state("package_2", "3.3", "", "test", "present"); 
    "any" usebundle => package_state_options("package_3", "latest", "", "test", "present", "");
    "any" usebundle => package_present("package_4", "any", "", "test");
    # architecture
    "any" usebundle => package_present("package_5", "", "x86_64", "test"); 
    "any" usebundle => package_present("package_6", "6.5", "i686", "test");
    "any" usebundle => package_absent("package_7", "6.5", "default", "test");
}

bundle agent check {

  vars:
    "file_diff_test" string => "/usr/bin/diff \"${this.promise_filename}.expected\" \"${sys.workdir}/modules/packages/test_db\"";

  classes:
     "ok" expression => returnszero("${file_diff_test}", "useshell"),
                  if => "package_present_package_1_ok.package_state_package_2_ok.package_state_options_package_3_ok.package_present_package_4_ok.package_present_package_5_ok.package_present_package_6_ok.package_absent_package_7_ok";

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";

}

