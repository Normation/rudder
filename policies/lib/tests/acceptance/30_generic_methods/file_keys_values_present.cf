#######################################################
#
# Test checking if keys values are present in a file 
#
#######################################################

bundle common acc_path
{
  vars:
    "root" string => getenv("NCF_TESTS_ACCEPTANCE", 1024);
}

body common control
{
      inputs => { "${acc_path.root}/default.cf.sub", "${acc_path.root}/default_ncf.cf.sub", "@{ncf_inputs.default_files}" };
      bundlesequence  => { configuration, default("${this.promise_filename}") };
      version => "1.0";
}

#######################################################

bundle agent init
{
  vars:
    "tmp"         string => getenv("TEMP", 1024);
    "file"        string => "${tmp}/test";
    "ref_file"    string => "${tmp}/ref";
    "file_canon"  string => canonify("${file}");
    "base_text"   string => "# File with lhs=rhs text
JAVA_OPTS=\"-Djava.awt.headless=true -Xmx128m -XX:+UseConcMarkSweepGC\"";

    "ref_text"    string=> "# File with lhs=rhs text
JAVA_OPTS=\\\"-Djava.awt.headless=true -Xmx1024m\\\"";

    "keys[JAVA_OPTS]" string => "\"-Djava.awt.headless=true -Xmx1024m\"";
    "separator" string => "=";

  commands:
      "/bin/echo"
        args    => "\"${ref_text}\" > \"${ref_file}\"",
        contain => in_shell;

      "/bin/echo"
        args    => "\"${base_text}\" > \"${file}\"",
        contain => in_shell;

}

#######################################################

bundle agent test
{
  methods:
    "ph1" usebundle => file_keys_values_present("${init.file}", "init.keys", "${init.separator}");
}

#######################################################

bundle agent check
{
  vars:
      "file_diff_test" string => "/usr/bin/diff \"${init.ref_file}\" \"${init.file}\"";


  classes:
    "file_correct" 
       expression => returnszero("${file_diff_test}", "noshell"),
       ifvarclass => canonify("file_keys_values_present_${init.file}_reached");

    "ok"          expression => "file_correct.file_keys_values_present_${init.file_canon}_ok.!file_keys_values_present_${init.file_canon}_not_ok";

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
    !file_correct::
      "diff command doesn't returns 0 for command: ${file_diff_test}";
}
