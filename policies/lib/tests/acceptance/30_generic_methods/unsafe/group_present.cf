#######################################################
#
# Test checking if a group exist
#
#######################################################

bundle common acc_path
{
  vars:
    "root" string => getenv("NCF_TESTS_ACCEPTANCE", 1024);
}

body common control
{
      inputs => { "${acc_path.root}/default.cf.sub", "${acc_path.root}/default_ncf.cf.sub", "@{ncf_inputs.default_files}" };
      bundlesequence  => { configuration, default("${this.promise_filename}") };
      version => "1.0";
}

#######################################################

bundle agent init
{
  vars:
    "group1"      string => "group1";
    "group2"      string => "group2";

  commands:
    "/usr/sbin/groupadd ${init.group2}" handle => "a2";
}

#######################################################

bundle agent test
{
  methods:
    "ph1" usebundle => group_present("${init.group1}");
    "ph2" usebundle => group_present("${init.group2}");
}

#######################################################

bundle agent check
{
  classes:
    "group1_ok" expression => groupexists("${init.group1}");
    "group2_ok" expression => groupexists("${init.group2}");

    "ph1_ok" expression => "!group_present_${init.group1}_kept.group_present_${init.group1}_repaired.!group_present_${init.group1}_error";
    "ph2_ok" expression => "group_present_${init.group2}_kept.!group_present_${init.group2}_repaired.!group_present_${init.group2}_error";


    "ok" expression => "group1_ok.group2_ok.ph1_ok.ph2_ok";

  commands:
    "/usr/sbin/groupdel ${init.group1}" handle => "h1";
    "/usr/sbin/groupdel ${init.group2}" handle => "h2";

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
    group1_ok::
      "group1_ok";
    group2_ok::
      "group2_ok";
    ph1_ok::
      "ph1_ok";
    ph2_ok::
      "ph2_ok";
    cfengine::
      "group_present_${init.group1}_kept" ifvarclass => "group_present_${init.group1}_kept";
      "group_present_${init.group1}_repaired" ifvarclass => "group_present_${init.group1}_repaired";
      "group_present_${init.group1}_error" ifvarclass => "group_present_${init.group1}_error";
}
