#######################################################
#
# Test checking if a user exist
#
#######################################################

bundle common acc_path
{
  vars:
    "root" string => getenv("NCF_TESTS_ACCEPTANCE", 1024);
}

body common control
{
      inputs => { "${acc_path.root}/default.cf.sub", "${acc_path.root}/default_ncf.cf.sub", "@{ncf_inputs.default_files}" };
      bundlesequence  => { configuration, default("${this.promise_filename}") };
      version => "1.0";
}

#######################################################

bundle agent init
{
  vars:
    "user1"      string => "user1";
    "user2"      string => "user2";
    "user3"      string => "user3";

  commands:
    "/usr/sbin/useradd ${init.user2}" handle => "a2";
    "/usr/sbin/useradd ${init.user3}" handle => "a3";
    "/usr/bin/perl -i -pe 's/^${init.user3}:!:/${init.user3}::/' /etc/shadow" handle => "p3";
}

#######################################################

bundle agent test
{
  methods:
    "ph1" usebundle => user_absent("${init.user1}");
    "ph2" usebundle => user_absent("${init.user2}");
    "ph3" usebundle => user_absent("${init.user3}");
}

#######################################################

bundle agent check
{
  classes:
    "user1_ok" not  => userexists("${init.user1}");
    "user2_ok" not  => userexists("${init.user2}");
    "user3_ok" not  => userexists("${init.user3}");

    "ph1_ok" expression => "user_absent_${init.user1}_kept.!user_absent_${init.user1}_repaired.!user_absent_${init.user1}_error";
    "ph2_ok" expression => "!user_absent_${init.user2}_kept.user_absent_${init.user2}_repaired.!user_absent_${init.user2}_error";
    "ph3_ok" expression => "!user_absent_${init.user3}_kept.user_absent_${init.user3}_repaired.!user_absent_${init.user3}_error";


    "ok" expression => "user1_ok.user2_ok.user3_ok.ph1_ok.ph2_ok.ph3_ok";

  commands:
    "/usr/sbin/userdel ${init.user1}" handle => "h1";
    "/usr/sbin/userdel ${init.user2}" handle => "h2";
    "/usr/sbin/userdel ${init.user3}" handle => "h3";

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
#    user1_ok::
#      "user1_ok";
#    user2_ok::
#      "user2_ok";
#    user3_ok::
#      "user3_ok";
#    ph1_ok::
#      "ph1_ok";
#    ph2_ok::
#      "ph2_ok";
#    ph3_ok::
#      "ph3_ok";
}
