#######################################################
#
# Test restarting a service with conditions
# In unsafe because:
#Â   - Will restart the "cron" service on the machine
#######################################################

bundle common acc_path
{
  vars:
    "root" string => getenv("NCF_TESTS_ACCEPTANCE", 1024);
}

body common control
{
      inputs => { "${acc_path.root}/default.cf.sub", "${acc_path.root}/default_ncf.cf.sub", "@{ncf_inputs.default_files}" };
      bundlesequence  => { configuration, default("$(this.promise_filename)") };
      version => "1.0";
}

#######################################################

bundle agent init
{
  vars:
    redhat::
      "service_script_1" string => "crond";
    aix::
      "service_script_1" string => "syslogd";
    !redhat.!aix::
      "service_script_1" string => "cron";
    any::
      "service_script_2" string => "my_service";
}

#######################################################

bundle agent test
{

  methods:
      "ph1" usebundle => service_restart_if("${init.service_script_1}", "any");
      "ph2" usebundle => service_restart_if("${init.service_script_2}", "!any");

}

#######################################################

bundle agent check
{
  classes:
      "ok_service_1" expression => "(service_restart_${init.service_script_1}_ok.service_restart_${init.service_script_1}_reached.service_restart_${init.service_script_1}_repaired.promise_repaired_service_restart_${init.service_script_1}).!(service_restart_${init.service_script_1}_kept|service_restart_${init.service_script_1}_not_repaired|promise_kept_service_restart_${init.service_script_1})";
      "ok_service_2" expression => "(service_restart_${init.service_script_2}_ok.service_restart_${init.service_script_2}_reached.service_restart_${init.service_script_2}_kept.service_restart_${init.service_script_2}_not_repaired.promise_kept_service_restart_${init.service_script_2}).!(service_restart_${init.service_script_2}_repaired|promise_repaired_service_restart_${init.service_script_2})";

      "ok" and       => { "ok_service_1", "ok_service_2" };

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL (Service restart failed)";
}
