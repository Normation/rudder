#######################################################
#
# Test reloading a service
# In unsafe because:
#Â   - Will reload the "cron" service on the machine
#######################################################

bundle common acc_path
{
  vars:
    "root" string => getenv("NCF_TESTS_ACCEPTANCE", 1024);
}

body common control
{
      inputs => { "${acc_path.root}/default.cf.sub", "${acc_path.root}/default_ncf.cf.sub", "@{ncf_inputs.default_files}" };
      bundlesequence  => { configuration, default("$(this.promise_filename)") };
      version => "1.0";
}

#######################################################

bundle agent init
{
  vars:
    redhat::
      "service_script" string => "crond";
    aix::
      "service_script" string => "syslogd";
    systemd.(debian|suse)::
      "service_script" string => "dbus";
    !systemd.(debian|suse)::
      "service_script" string => "cron";

    any::
      "c_service_script" string => canonify("${service_script}");
}

#######################################################

bundle agent test
{
  classes:
    "pass2" expression => "pass1";
    "pass1" expression => "any";

  methods:
    pass2::
      "ph" usebundle => service_reload("${init.service_script}");

  commands:
    "${paths.service} ${init.service_script} start";
}

#######################################################

bundle agent check
{
  classes:
    "ok" expression => "service_reload_${init.c_service_script}_reached.service_reload_${init.c_service_script}_repaired.!service_reload_${init.c_service_script}_kept.!service_reload_${init.c_service_script}_error";

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL (Service verification failed)";
}

