@Library('slack-notification')
import org.gradiant.jenkins.slack.SlackNotifier

// Check vulns in dependencies on repo branches

pipeline {
    agent none
    triggers { cron('@daily') }

    stages {
        stage('deps-webapp') {
            when { not { changeRequest() } }
            agent {
                dockerfile {
                    filename 'webapp/sources/Dockerfile'
                    additionalBuildArgs "--build-arg USER_ID=${JENKINS_UID}"
                    // and share maven cache
                    args '-v /srv/cache/maven:/home/jenkins/.m2'
                }
            }
            steps {
                dir('webapp/sources') {
                    sh script: 'mvn --batch-mode -DfailBuildOnCVSS=7 -DcveValidForHours=48 -DsuppressionFiles=dependency-check-suppression.xml -DossindexAnalyzerEnabled=false org.owasp:dependency-check-maven:6.1.6:aggregate', label: "check webapp dependencies"
                    sh script: 'mvn --batch-mode license:aggregate-third-party-report', label: 'list webapp dependencies'
                }
            }
            post {
                always {
            		archiveArtifacts artifacts: 'webapp/sources/target/dependency-check-report.html, webapp/sources/target/site/aggregate-third-party-report.html'
                }
                failure {    script {
                        new SlackNotifier().notifyResult("scala-team")
                    }
                }
            }
        }
        stage('deps-relayd') {
            when { not { changeRequest() } }
            agent { 
                dockerfile { 
                    filename 'relay/sources/relayd/Dockerfile'
                    additionalBuildArgs "--build-arg USER_ID=${JENKINS_UID}"
                    // mount cache
                    args '-v /srv/cache/cargo:/usr/local/cargo/registry'
                }
            }            
            steps {
                dir('relay/sources/relayd') {
                    sh script: 'mkdir -p target', label: 'create target directory'
                    sh script: 'cargo deny check', label: 'check relayd dependencies'
                    sh script: 'cargo deny list > target/relayd-dependencies.txt', label: 'list relayd dependencies'
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'relay/sources/relayd/target/relayd-dependencies.txt'
                }
                failure {
                    script {
                        new SlackNotifier().notifyResult("rust-team")
                    }
                }
            }
        }
        stage('deps-language') {
            when { not { changeRequest() } }
            agent { 
                dockerfile { 
                    filename 'language/Dockerfile'
                    additionalBuildArgs "--build-arg USER_ID=${JENKINS_UID}"
                    // mount cache
                    args '-v /srv/cache/cargo:/usr/local/cargo/registry'
                }
            }
            steps {
                dir('language') {
                    sh script: 'mkdir -p target', label: 'create target directory'
                    sh script: 'cargo deny check', label: 'check language dependencies'
                    sh script: 'cargo deny list > target/language-dependencies.txt', label: 'list language dependencies'
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'language/target/language-dependencies.txt'
                }
                failure {
                    script {
                        new SlackNotifier().notifyResult("rust-team")
                    }
                }
            }
        }
        stage('End') {
            steps {
                echo 'End of build'
            }
            post {
                fixed {
                    script {
                        new SlackNotifier().notifyResult("everyone")
                    }
                }
            }
        }
    }
}
