#####################################################################################
# Copyright 2011 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# In accordance with the terms of section 7 (7. Additional Terms.) of
# the GNU Affero GPL v3, the copyright holders add the following
# Additional permissions:
# Notwithstanding to the terms of section 5 (5. Conveying Modified Source
# Versions) and 6 (6. Conveying Non-Source Forms.) of the GNU Affero GPL v3
# licence, when you create a Related Module, this Related Module is
# not considered as a part of the work and may be distributed under the
# license agreement of your choice.
# A "Related Module" means a set of sources files including their
# documentation that, without modification of the Source Code, enables
# supplementary functions or services in addition to those offered by
# the Software.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/agpl.html>.
#
#####################################################################################

##
# Default configuration file for the application. 
# You can define the location of the file by
# setting "rudder.configFile" JVM property,
# for example:
# java .... -Drudder.configFile=/opt/rudder/etc/rudder-web.conf
##


###########################
# Application information ###########################################################
###########################

#
#define that property if you are behind a proxy
#or anything that make the URL served by the
#servlet container be different than the public one
#note: if defined, must not end with /
#let blank to use default value
#
## This property is no more use since Rudder 2.4
#base.url=

#
# Directory used to store locks about
# some Rudder actions or batch processing
#
rudder.dir.lock=/var/rudder/lock/

#
# URL where Inventory Reports are sent to be processed and stored.
# This is the local URL of the "inventory endpoint" web application,
#
rudder.endpoint.cmdb=http://localhost:8080/endpoint/upload/


#
# The port used by the rsyslog server on the Rudder root server. 
# Default port number is 514, but in some cases this may need to be changed.
# For example, on Ubuntu version >= 12.04 rsyslog runs as a non-root user,
# so using port 514 is not permitted, thus we must use a port higher than 1024.
# (see: https://bugs.launchpad.net/ubuntu/+source/rsyslog/+bug/789174)
#
rudder.syslog.port=514

###################
# LDAP properties ###################################################################
###################

#
# LDAP directory connection information
#
ldap.host=localhost
ldap.port=389
ldap.authdn=cn=manager,cn=rudder-configuration
ldap.authpw=secret


#
# LDAP DIT configuration
#
# You should not have to modify the following properties, used to 
# configure the inernal structure of the LDAP Directory. 
#
ldap.node.base=cn=rudder-configuration
ldap.rudder.base=ou=Rudder, cn=rudder-configuration
ldap.inventories.software.basedn=ou=Inventories, cn=rudder-configuration
ldap.inventories.accepted.basedn=ou=Accepted Inventories, ou=Inventories, cn=rudder-configuration
ldap.inventories.pending.basedn=ou=Pending Inventories, ou=Inventories, cn=rudder-configuration
ldap.inventories.removed.basedn=ou=Removed Inventories, ou=Inventories, cn=rudder-configuration


###########################
# SQL database properties ###########################################################
###########################

#
# For now, only PostGRES is supported, and so the expected
# JDBC driver is "org.postgresql.Driver"
#
rudder.jdbc.driver=org.postgresql.Driver
rudder.jdbc.url=jdbc:postgresql://localhost:5432/rudder
rudder.jdbc.username=rudder
rudder.jdbc.password=Normation


###########################
# Automatic reports cleaning ###########################################################
###########################

#
# Automatic reports cleaning
# This allows you to schedule automatically clean reports (archive or delete)
#

#
# TTL are the maximum age (in days) of reports before archiving (archive.TTL)
# or deleting (delete.TTL)
#
# A value equal to 0 or lower means disable automatic archiving/deleting.
#
# If the archive TTL is greater than the delete TTL then archiving will be disabled
# as there will be no reports to archive (they would be deleted first).
#
# Defaults: archive after 30 days, delete after 90 days.
#

rudder.batch.reportscleaner.archive.TTL=30
rudder.batch.reportscleaner.delete.TTL=90

#
# Schedule option for automatic cleaning
# Automatic cleaning can be scheduled:
#  - every hour at the minute past the hour of your choice
#  - every day at the time of your choice
#  - every week on the day at the time of your choice
#
# Default frequency: daily
rudder.batch.reportscleaner.frequency=daily

# Defaults: minute=0, hour=0, day=Sunday


# Which minute the cleaner should be run on.
# Values  : [0-59]
# Default : 0
rudder.batch.databasecleaner.runtime.minute=0

# Which hour the cleaner should be run on.
# Values : [0-23]
# Default : 0
rudder.batch.databasecleaner.runtime.hour=0

# Which day the cleaner should be run on.
# Values : monday | tuesday | wednesday | thursday | friday | saturday | sunday
# Default : sunday
rudder.batch.databasecleaner.runtime.day=sunday


#####################
# Webdav properties #################################################################
#####################

#
# Authentication information for the webdav server used to
# receive Inventory Reports from nodes
#
rudder.webdav.user=rudder
rudder.webdav.password=rudder

####################################
# CFEngine and promises properties ##################################################
####################################

#
# Port used by the community edition of CFEngine agent to 
# contact the server (that's the server port).
#
rudder.community.port=5309

#
# Command line tools used to check the validity of generated promises
#
rudder.community.checkpromises.command=/var/rudder/cfengine-community/bin/cf-promises
rudder.nova.checkpromises.command=/bin/true

#
# Path to where CFEngine Enterprise (ex Nova) licenses are stored. 
#
rudder.dir.licensesFolder=/opt/rudder/etc/licenses

#
# Directories used to write nodes promises. 
# - promises generated for a node with id UUID go in ***/var/rudder/share/UUID***
#   For now, that property can not be modified, because there is no simple
#   way of doing that and letting node knowing where to go look for there promises. 
# - promises generated for CFEngine community server go into ***/var/rudder/cfengine-community/inputs***
# - promises generated for CFEngine Nova server go into ***/var/cfengine/inputs***
# - 'rudder.dir.backup' is the directory path where previous configuration of each node are stored
#
rudder.dir.backup=/var/rudder/backup/

#
# Shared folder
#
# Directory of the extra files the rudder root server will serve to the managed nodes
# If left empty, no extra files will be served
#
rudder.dir.shared.files.folder=/var/rudder/configuration-repository/shared-files

############################################
# Technique library and its Git properties ##########################################
############################################

#
# The path of the root directory of the Technique library. 
# It MUST be the same directory of ${rudder.dir.gitRoot} 
# or one of its sub-directories
#
rudder.dir.techniques=/var/rudder/configuration-repository/techniques


#
# The directory containing tools used by Rudder or nodes. 
# You should configure the path of that directory to be
# the "tools" subdirectory of "rudder-technique" local
# clone of git repository 
# (see property rudder.git.rudder-technique)
#
rudder.dir.dependencies=/var/rudder/tools

#
# Interval of time (in minutes) between two checks
# for a Technique library update.
#
# If O is given, the periodic update of Technique
# library features will be disabled
#
rudder.batch.techniqueLibrary.updateInterval=5

#
# Configure the refs path to use for the git repository for
# the Technique Reference Library. 
# The default is to use "refs/heads/master" (the local master
# branch). 
# You have to use the full ref path. 
#
rudder.techniqueLibrary.git.refs.path=refs/heads/master


##########################################################
# Configuration repository, its update and Git properties ###########################
##########################################################

#
# Configuration repository is the place where all Group/Directive/Rules
# configured by the user are historized. 
#

#
# The full path to the directory containing the 
# .git,  directives, groups and rules directories.
#
rudder.dir.gitRoot=/var/rudder/configuration-repository

#
# If true, an archive of Rules, groups, 
# Directives and Active Techniques are recorded
# to the rudder.dir.gitRoot directory specified above
# and a git commit is performed when any of these items is modified.
# Boolean, defaults to true.
# 
rudder.autoArchiveItems=true

#
# If true, in UI Rudder will prompt the user for a reason of the change. 
# The message displayed to the user is based on the variable 
# rudder.ui.changeMessage.explanation
# Based on the value of rudder.ui.changeMessage.mandatory, the user input
# can be mandatory or not
#
rudder.ui.changeMessage.enabled=true

#
# Boolean, defaults false
# If true, the user input will be mandatory (non empty reason message)
#
rudder.ui.changeMessage.mandatory=false

# 
# Text, defaults Please enter a message explaining the reason for this change.
# This variable defines the content of the message prompted to the user
# when he does modifications
# 
rudder.ui.changeMessage.explanation=Please enter a message explaining the reason for this change.



###############################
# Dynamic group configuration #######################################################
###############################

#
# Interval of time between two dynamic group update batch
# Expect an int (amount of minutes)
# If O is given, the dynamic group features will be disabled
#
rudder.batch.dyngroup.updateInterval=5


##########################
# REST API configuration ############################################################
##########################

#
# Boolean, defaults to true
# If true, REST API urls under /api/... won't require
# to be authenticated to be accessed. 
# The reason to have default=true for that is that the
# authorization/authentication part for the REST API
# will be done by a third party software, like Apache
#
rudder.rest.allowNonAuthenticatedUser=true

####################
# Inventory history ##################################################################
####################

#
# Inventory historization root directory
#
# The directory used as root directory to store LDIF dump
# of historized inventories. 
# It must be synchronise with the property of the same name in 
# the "inventory endpoint" web application (inventory-web.properties), 
# which is the application actually writing the files. 
#
# This historized inventories are used in the node acceptation
# screen, to keep information about the state of the node
# when it was accepted
#
history.inventories.rootdir=/var/rudder/inventories/historical

###############################
# Non compliant reports logger #################################################
###############################

# Rudder can log a line for each 5 minute period when configuration policy is 
# not correctly applied (in error or repaired).
# 
# Default path is /var/log/rudder/compliance/non-compliant-reports.log, and can
# be changed in /opt/rudder/etc/logback.xml.
#
# See online documentation for more details.
#
# This log is generated by a job that runs at a regular interval, by default
# every minute. You can specify this interval (in minutes) below.
# A negative or 0 value disables the job, and won't log any non-compliant reports.
#

rudder.batch.reports.logInterval=1

###########################
# Workflow configuration  ###########################################################
###########################

# Activate the Workflow (default false)
#
# If true, the workflow will be activated within Rudder. Every changes in 
# Directive, Group or Rules will have to be validated before being deployed
# If false, when a Directive, Rule, group, node ... is modified
# promises will be automatically
# regenerated. 
# If true, the workflow will be activated within Rudder. Every changes in 
# Directive, Group or Rules will have to be validated before being deployed
#
# Boolean, defaults to false.

rudder.workflow.enabled=false

# Enable self validation (default false)
#
# If false, no change request can be validated by it's creator
# So every change request will need to be reviewed by someone different from
# who requested this changed
#
# Boolean, defaults to false.

rudder.workflow.self.validation=false

# Enable self deployment (default true)
#
# If false, no change request can be deployed by it's creator
# So every change request will need to be reviewed by someone different from
# who requested this changed
#
# Boolean, defaults to true.

rudder.workflow.self.deployment=true

#########################
# DEPRECATED properties #############################################################
#########################

#
# A list of properties actually used in Rudder, but for features disable in the UI. 
#

#
#  Upload directory
#  The directory where new uploaded files are stored
#  DEPRECATED: not used any more in Rudder UI. 
#
upload.root.directory=/var/rudder/files/

#
# The directory used to put uploaded files shared between
# several nodes. 
# A symlink from the file to the relevant node promise directory
# will be created on each node needing the file in place
# of copying it.
# DEPRECATED: not used anymore in Rudder UI
rudder.dir.uploaded.file.sharing=/var/rudder/files/

#
#  Emergency stop
#  path to the script/binary that allows emergency orchestrator stop
#  DEPRECATED: feature no more available in Rudder UI. 
#
bin.emergency.stop=/opt/rudder/bin/cfe-red-button.sh


