{
  "info": {
    "node_id": "root",
    "timestamp": "2019-12-02T14:24:20+00:00"
  },
  "config_id": "20191202-150503-68b01c0f",
  "reports": [
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "rudder",
      "directive_id": "run",
      "component": "start",
      "key_value": "20191202-150503-68b01c0f",
      "event_type": "control",
      "msg": "Start execution",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-11T15:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "ncf Initialization",
      "key_value": "None",
      "event_type": "log_info",
      "msg": "Automatically promoting context scope for 'heartbeat_sent' to namespace visibility, due to persistence",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-11T16:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "ncf Initialization",
      "key_value": "None",
      "event_type": "log_info",
      "msg": "Starting CFEngine 3.12.2 on host server.rudder.local (sles_15 x86_64)",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-11T17:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "ncf Initialization",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "Configuration library initialization was correct",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-11T18:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "Update",
      "key_value": "None",
      "event_type": "log_repaired",
      "msg": "Common configuration library updated",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-11T19:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "Update",
      "key_value": "None",
      "event_type": "result_repaired",
      "msg": "Policy or configuration library were updated",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-11T20:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "Security parameters",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "The internal environment security is acceptable",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-11T21:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "CRON Daemon",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "Cron daemon status was correct",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-11T22:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "Log system for reports",
      "key_value": "None",
      "event_type": "log_info",
      "msg": "Executing 'no timeout' ... '/bin/sh /var/rudder/cfengine-community/inputs/common/1.0/check-rsyslog-version 5.6.4'",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-11T23:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "Log system for reports",
      "key_value": "None",
      "event_type": "log_info",
      "msg": "Completed execution of '/bin/sh /var/rudder/cfengine-community/inputs/common/1.0/check-rsyslog-version 5.6.4'",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-12T00:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "Log system for reports",
      "key_value": "None",
      "event_type": "log_info",
      "msg": "Detected running syslog as rsyslog",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-12T01:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "Log system for reports",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "Logging system for report centralization is already correctly configured",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-12T02:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "None",
      "key_value": "/var/rudder/tmp/rudder_monitoring.csv",
      "event_type": "log_info",
      "msg": "Executing 'no timeout' ... '/bin/sh /var/rudder/cfengine-community/inputs/common/1.0/check-rsyslog-version'",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-12T03:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "None",
      "key_value": "/var/rudder/tmp/rudder_monitoring.csv",
      "event_type": "log_info",
      "msg": "Completed execution of '/bin/sh /var/rudder/cfengine-community/inputs/common/1.0/check-rsyslog-version'",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-12T04:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "None",
      "key_value": "/var/rudder/tmp/rudder_monitoring.csv",
      "event_type": "log_info",
      "msg": "Remove file /var/rudder/tmp/rudder_monitoring.csv was correct",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-12T05:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "root-DP",
      "directive_id": "root-distributePolicy",
      "component": "Synchronize resources",
      "key_value": "None",
      "event_type": "result_na",
      "msg": "Nothing needs to be updated",
      "policy": "DistributePolicy",
      "node_id": "root",
      "execution_datetime": "2019-12-12T06:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "root-DP",
      "directive_id": "root-distributePolicy",
      "component": "Synchronize policies",
      "key_value": "None",
      "event_type": "result_na",
      "msg": "Rudder server does not need to synchronize its policies",
      "policy": "DistributePolicy",
      "node_id": "root",
      "execution_datetime": "2019-12-12T07:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "root-DP",
      "directive_id": "root-distributePolicy",
      "component": "Synchronize files",
      "key_value": "None",
      "event_type": "result_na",
      "msg": "Rudder server does not need to synchronize its shared files",
      "policy": "DistributePolicy",
      "node_id": "root",
      "execution_datetime": "2019-12-12T08:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "root-DP",
      "directive_id": "root-distributePolicy",
      "component": "Send inventories to Rudder server",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "No inventory to send",
      "policy": "DistributePolicy",
      "node_id": "root",
      "execution_datetime": "2019-12-12T09:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "root-DP",
      "directive_id": "root-distributePolicy",
      "component": "Configure apache ACL",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "Apache ACLs are correct",
      "policy": "DistributePolicy",
      "node_id": "root",
      "execution_datetime": "2019-12-12T10:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check logrotate configuration",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "The logrotate configuration is correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-12T11:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check relayd process",
      "key_value": "rudder-relayd",
      "event_type": "log_info",
      "msg": "Executing is-active on rudder-relayd using the systemctl method",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-12T12:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check relayd process",
      "key_value": "rudder-relayd",
      "event_type": "log_info",
      "msg": "Check if the service rudder-relayd is started was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-12T13:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check relayd process",
      "key_value": "rudder-relayd",
      "event_type": "log_info",
      "msg": "Ensure that service rudder-relayd is running was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-12T14:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check relayd process",
      "key_value": "rudder-relayd",
      "event_type": "log_info",
      "msg": "Executing is-enabled on rudder-relayd using the systemctl method",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-12T15:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check relayd process",
      "key_value": "rudder-relayd",
      "event_type": "log_info",
      "msg": "Check if service rudder-relayd is started at boot was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-12T16:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check relayd process",
      "key_value": "rudder-relayd",
      "event_type": "log_info",
      "msg": "Ensure service rudder-relayd is started at boot was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-12T17:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check relayd process",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "relayd service running was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-12T18:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check relayd boot script",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "relayd service enabled was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-12T19:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Relayd service configuration",
      "key_value": "/opt/rudder/etc/relayd",
      "event_type": "log_info",
      "msg": "Ensure permissions mode 640, owner root and group rudder on /opt/rudder/etc/relayd on type all with inf recursion level was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-12T20:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Relayd service configuration",
      "key_value": "/opt/rudder/etc/relayd",
      "event_type": "log_info",
      "msg": "Ensure permissions mode 640, owner root and group rudder on /opt/rudder/etc/relayd with ${recursion} recursion level was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-12T21:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Relayd service configuration",
      "key_value": "/opt/rudder/etc/relayd/main.conf",
      "event_type": "log_info",
      "msg": "Build file /opt/rudder/etc/relayd/main.conf from mustache type template /var/rudder/cfengine-community/inputs/server-roles/1.0/relayd.conf.tpl was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-12T22:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Relayd service configuration",
      "key_value": "/opt/rudder/etc/relayd/main.conf",
      "event_type": "log_info",
      "msg": "Build file /opt/rudder/etc/relayd/main.conf from mustache template /var/rudder/cfengine-community/inputs/server-roles/1.0/relayd.conf.tpl was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-12T23:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Relayd service configuration",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "rudder-relayd configration was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T00:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check postgresql process",
      "key_value": "postgresql",
      "event_type": "log_info",
      "msg": "Executing is-active on postgresql using the systemctl method",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T01:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check postgresql process",
      "key_value": "postgresql",
      "event_type": "log_info",
      "msg": "Check if the service postgresql is started was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T02:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check postgresql process",
      "key_value": "postgresql",
      "event_type": "log_info",
      "msg": "Ensure that service postgresql is running was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T03:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check postgresql process",
      "key_value": "postgresql",
      "event_type": "log_info",
      "msg": "Executing is-enabled on postgresql using the systemctl method",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T04:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check postgresql process",
      "key_value": "postgresql",
      "event_type": "log_info",
      "msg": "Check if service postgresql is started at boot was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T05:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check postgresql process",
      "key_value": "postgresql",
      "event_type": "log_info",
      "msg": "Ensure service postgresql is started at boot was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T06:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check postgresql process",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "postgresql service running was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T07:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check postgresql boot script",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "postgresql service enabled was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T08:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check LDAP in rudder-webapp.properties",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "Web interface configuration files (checked LDAP password) was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T09:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check LDAP credentials",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "OpenLDAP configuration file (rootdn password) was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T10:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check rudder-passwords.conf",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "Presence and permissions of Rudder password file was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T11:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check pgpass file",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "Presence and permissions of pgsql password file was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T12:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check SQL in rudder-webapp.properties",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "Web interface configuration files (SQL password) was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T13:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check SQL credentials",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "PostgreSQL user account's already correct.",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T14:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check allowed networks configuration",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "Allowed networks configuration is correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T15:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check WebDAV properties",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "Rudder WebDAV properties was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T16:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check WebDAV credentials",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "Apache WebDAV user and password are OK",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T17:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check apache process",
      "key_value": "apache2",
      "event_type": "log_info",
      "msg": "Executing is-active on apache2 using the systemctl method",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T18:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check apache process",
      "key_value": "apache2",
      "event_type": "log_info",
      "msg": "Check if the service apache2 is started was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T19:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check apache process",
      "key_value": "apache2",
      "event_type": "log_info",
      "msg": "Ensure that service apache2 is running was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T20:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check apache process",
      "key_value": "apache2",
      "event_type": "log_info",
      "msg": "Executing is-enabled on apache2 using the systemctl method",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T21:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check apache process",
      "key_value": "apache2",
      "event_type": "log_info",
      "msg": "Check if service apache2 is started at boot was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T22:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check apache process",
      "key_value": "apache2",
      "event_type": "log_info",
      "msg": "Ensure service apache2 is started at boot was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-13T23:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check apache process",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "apache service running was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T00:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check apache boot script",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "apache service enabled was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T01:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check jetty process",
      "key_value": "rudder-jetty",
      "event_type": "log_info",
      "msg": "Executing is-active on rudder-jetty using the systemctl method",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T02:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check jetty process",
      "key_value": "rudder-jetty",
      "event_type": "log_info",
      "msg": "Check if the service rudder-jetty is started was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T03:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check jetty process",
      "key_value": "rudder-jetty",
      "event_type": "log_info",
      "msg": "Ensure that service rudder-jetty is running was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T04:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check jetty process",
      "key_value": "rudder-jetty",
      "event_type": "log_info",
      "msg": "Executing is-enabled on rudder-jetty using the systemctl method",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T05:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check jetty process",
      "key_value": "rudder-jetty",
      "event_type": "log_info",
      "msg": "Check if service rudder-jetty is started at boot was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T06:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check jetty process",
      "key_value": "rudder-jetty",
      "event_type": "log_info",
      "msg": "Ensure service rudder-jetty is started at boot was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T07:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check jetty process",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "jetty service running was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T08:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check jetty boot script",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "jetty service enabled was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T09:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check jetty process",
      "key_value": "/var/rudder/cfengine-community/ppkeys/root-MD5=c5dbf58ee7e0ab9fb383d212c0280cda.pub",
      "event_type": "log_info",
      "msg": "Symlink /var/rudder/cfengine-community/ppkeys/root-MD5=c5dbf58ee7e0ab9fb383d212c0280cda.pub targeting /var/rudder/cfengine-community/ppkeys/localhost.pub was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T10:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check jetty process",
      "key_value": "/var/rudder/cfengine-community/ppkeys/root-MD5=c5dbf58ee7e0ab9fb383d212c0280cda.pub",
      "event_type": "log_info",
      "msg": "Symlink /var/rudder/cfengine-community/ppkeys/root-MD5=c5dbf58ee7e0ab9fb383d212c0280cda.pub targeting /var/rudder/cfengine-community/ppkeys/localhost.pub was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T11:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check jetty process",
      "key_value": "/var/rudder/cfengine-community/ppkeys/root-MD5=c5dbf58ee7e0ab9fb383d212c0280cda.pub",
      "event_type": "log_info",
      "msg": "Symlink /var/rudder/cfengine-community/ppkeys/root-MD5=c5dbf58ee7e0ab9fb383d212c0280cda.pub targeting /var/rudder/cfengine-community/ppkeys/localhost.pub (without overwrite) was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T12:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check configuration-repository folder",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "The /var/rudder/configuration-repository directory is present",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T13:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check configuration-repository GIT lock",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "The /var/rudder/configuration-repository git lock file is not present or not older than 5 minutes",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T14:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check rudder status",
      "key_value": "None",
      "event_type": "log_info",
      "msg": "Executing 'no timeout' ... '/opt/rudder/bin/curl --proxy '' --max-time 240 -s http://localhost:8080/rudder/api/status |/bin/grep -q OK'",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T15:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check rudder status",
      "key_value": "None",
      "event_type": "log_info",
      "msg": "Automatically promoting context scope for 'site_ok' to namespace visibility, due to persistence",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T16:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check rudder status",
      "key_value": "None",
      "event_type": "log_info",
      "msg": "Completed execution of '/opt/rudder/bin/curl --proxy '' --max-time 240 -s http://localhost:8080/rudder/api/status |/bin/grep -q OK'",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T17:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check rudder status",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "The http://localhost:8080/rudder/api/status web interface is running",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T18:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check slapd process",
      "key_value": "rudder-slapd",
      "event_type": "log_info",
      "msg": "Executing is-active on rudder-slapd using the systemctl method",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T19:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check slapd process",
      "key_value": "rudder-slapd",
      "event_type": "log_info",
      "msg": "Check if the service rudder-slapd is started was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T20:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check slapd process",
      "key_value": "rudder-slapd",
      "event_type": "log_info",
      "msg": "Ensure that service rudder-slapd is running was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T21:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check slapd process",
      "key_value": "rudder-slapd",
      "event_type": "log_info",
      "msg": "Executing is-enabled on rudder-slapd using the systemctl method",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T22:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check slapd process",
      "key_value": "rudder-slapd",
      "event_type": "log_info",
      "msg": "Check if service rudder-slapd is started at boot was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-14T23:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check slapd process",
      "key_value": "rudder-slapd",
      "event_type": "log_info",
      "msg": "Ensure service rudder-slapd is started at boot was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-15T00:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check slapd process",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "slapd service running was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-15T01:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Check slapd boot script",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "slapd service enabled was correct",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-15T02:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "server-roles",
      "directive_id": "server-roles-directive",
      "component": "Send metrics to rudder-project",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "Sending metrics to rudder-project.org succeeded",
      "policy": "server-roles",
      "node_id": "root",
      "execution_datetime": "2019-12-15T03:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "inventory-all",
      "directive_id": "inventory-all",
      "component": "inventory",
      "key_value": "None",
      "event_type": "result_success",
      "msg": "Next inventory scheduled between 00:00 and 06:00",
      "policy": "Inventory",
      "node_id": "root",
      "execution_datetime": "2019-12-15T04:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "32377fd7-02fd-43d0-aab7-28460a91347b",
      "directive_id": "d957f62e-91d4-416c-8211-e70e7951c592",
      "component": "None",
      "key_value": "vim",
      "event_type": "log_info",
      "msg": "Presence of package vim in any version was correct",
      "policy": "packageManagement",
      "node_id": "root",
      "execution_datetime": "2019-12-15T05:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "32377fd7-02fd-43d0-aab7-28460a91347b",
      "directive_id": "d957f62e-91d4-416c-8211-e70e7951c592",
      "component": "None",
      "key_value": "vim2",
      "event_type": "log_warn",
      "msg": "package module: ErrorMessage=No provider of 'vim2' found.",
      "policy": "packageManagement",
      "node_id": "root",
      "execution_datetime": "2019-12-15T06:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "32377fd7-02fd-43d0-aab7-28460a91347b",
      "directive_id": "d957f62e-91d4-416c-8211-e70e7951c592",
      "component": "None",
      "key_value": "vim2",
      "event_type": "log_warn",
      "msg": "Error installing package 'vim2'",
      "policy": "packageManagement",
      "node_id": "root",
      "execution_datetime": "2019-12-15T07:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "32377fd7-02fd-43d0-aab7-28460a91347b",
      "directive_id": "d957f62e-91d4-416c-8211-e70e7951c592",
      "component": "None",
      "key_value": "vim2",
      "event_type": "log_warn",
      "msg": "Method 'ncf_package' failed in some repairs",
      "policy": "packageManagement",
      "node_id": "root",
      "execution_datetime": "2019-12-15T08:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "32377fd7-02fd-43d0-aab7-28460a91347b",
      "directive_id": "d957f62e-91d4-416c-8211-e70e7951c592",
      "component": "None",
      "key_value": "vim2",
      "event_type": "log_warn",
      "msg": "If you tried to install a virtual package, please use in place the concrete package you want to install.\nPresence of package vim2 in any version could not be repaired",
      "policy": "packageManagement",
      "node_id": "root",
      "execution_datetime": "2019-12-15T09:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "32377fd7-02fd-43d0-aab7-28460a91347b",
      "directive_id": "d957f62e-91d4-416c-8211-e70e7951c592",
      "component": "Package",
      "key_value": "vim",
      "event_type": "log_warn",
      "msg": "Method 'package_state_options' failed in some repairs",
      "policy": "packageManagement",
      "node_id": "root",
      "execution_datetime": "2019-12-15T11:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "32377fd7-02fd-43d0-aab7-28460a91347b",
      "directive_id": "d957f62e-91d4-416c-8211-e70e7951c592",
      "component": "Package",
      "key_value": "vim",
      "event_type": "result_success",
      "msg": "Presence of package vim in any version was correct",
      "policy": "packageManagement",
      "node_id": "root",
      "execution_datetime": "2019-12-15T12:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "32377fd7-02fd-43d0-aab7-28460a91347b",
      "directive_id": "d957f62e-91d4-416c-8211-e70e7951c592",
      "component": "Package",
      "key_value": "vim2",
      "event_type": "result_error",
      "msg": "Presence of package vim2 in any version could not be repaired",
      "policy": "packageManagement",
      "node_id": "root",
      "execution_datetime": "2019-12-15T13:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "32377fd7-02fd-43d0-aab7-28460a91347b",
      "directive_id": "d957f62e-91d4-416c-8211-e70e7951c592",
      "component": "Post-modification script",
      "key_value": "vim",
      "event_type": "result_na",
      "msg": "No post-modification script was set to run",
      "policy": "packageManagement",
      "node_id": "root",
      "execution_datetime": "2019-12-15T14:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "32377fd7-02fd-43d0-aab7-28460a91347b",
      "directive_id": "d957f62e-91d4-416c-8211-e70e7951c592",
      "component": "Post-modification script",
      "key_value": "vim2",
      "event_type": "result_na",
      "msg": "No post-modification script was set to run",
      "policy": "packageManagement",
      "node_id": "root",
      "execution_datetime": "2019-12-15T15:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "Monitoring",
      "key_value": "None",
      "event_type": "log_warn",
      "msg": "Method 'package_management_1_2_d957f62e_91d4_416c_8211_e70e7951c592' failed in some repairs",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-15T16:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "Monitoring",
      "key_value": "None",
      "event_type": "log_warn",
      "msg": "Method 'run_d957f62e_91d4_416c_8211_e70e7951c592' failed in some repairs",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-15T17:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "Monitoring",
      "key_value": "None",
      "event_type": "result_na",
      "msg": "No Rudder monitoring information to share with the server",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-15T18:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "rudder",
      "directive_id": "run",
      "component": "end",
      "key_value": "20191202-150503-68b01c0f",
      "event_type": "control",
      "msg": "End execution",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-15T19:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "Make sure syslog service runs",
      "key_value": "syslog",
      "event_type": "log_info",
      "msg": "Executing is-active on syslog using the systemctl method",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-15T20:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "Make sure syslog service runs",
      "key_value": "syslog",
      "event_type": "log_info",
      "msg": "Check if the service syslog is started was correct",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-15T21:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "Make sure syslog service runs",
      "key_value": "syslog",
      "event_type": "log_info",
      "msg": "Ensure that service syslog is running was correct",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-15T22:51:55+00:00",
      "report_id": "0"
    },
    {
      "start_datetime": "2019-12-02T14:24:20+00:00",
      "rule_id": "hasPolicyServer-root",
      "directive_id": "common-root",
      "component": "Make sure syslog service runs",
      "key_value": "syslog",
      "event_type": "log_info",
      "msg": "Ensure that service syslog is running was correct\n",
      "policy": "Common",
      "node_id": "root",
      "execution_datetime": "2019-12-15T23:51:55+00:00",
      "report_id": "0"
    }
  ]
}

