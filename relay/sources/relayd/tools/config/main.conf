# Format is TOML 0.5 (https://github.com/toml-lang/toml/blob/v0.5.0/README.md)

## General configuration
[general]

#nodes_list_file = "/var/rudder/lib/relay/nodeslist.json"
#nodes_certs_file = "/var/rudder/lib/ssl/nodescerts.pem"

# Has priority over node_id_file
#node_id = "MY_ID"

# File containing this relay's node id
#node_id_file = "/opt/rudder/etc/uuid.hive"

# Address to listen on for HTTP API
#listen = "127.0.0.1:3030"

# By default, the number of CPUs
#core_threads = 4
#blocking_threads = 512

# Can be "rudder" or "system", "system" is default for compatibility.
# * "cert_validation" means the certificates will be checked against system trusted root certificates, or the custom ca_path.
# * "cert_pinning" means the certificates will be checked using Rudder's model.
#   It is based on TOFU or manually pre-established trust and pinning of the server's certificate.
#   Hostname validation is disabled and the server certificate is used directly as the only CA.
# * "dangerous_none" allows totally disabling certificate validation in the relay, it must only
#   be used for testing purposes.
peer_authentication = "cert_pinning"

# Port to use for communication
# Global to a Rudder instance.
#https_port = 443

# Timeout for idle connections being kept-alive
#https_idle_timeout = "2s"

# Path to PEM-formatted custom CA certificates to trust
#ca_path = /path/to/cert.pem

### Processing

[processing.inventory]
#directory = "/var/rudder/inventories"

# Can be "upstream" or "disabled"
#output = "disabled"

[processing.inventory.catchup]
# Job frequency
#frequency = "10s"

# Process up to n files
#limit = 50

[processing.inventory.cleanup]
# Job frequency
#frequency = "10min"

# Inventory retention when not able to upload
#retention = "1day"

[processing.reporting]
#directory = "/var/rudder/reports"

# Can be "database", "upstream" or "disabled"
#output = "disabled"

# Can be "log_warn", "log_info", "log_debug"
#skip_event_types = []

[processing.reporting.catchup]
# Job frequency
#frequency = "10s"

# Process up to n files
#limit = 50

[processing.reporting.cleanup]
# Job frequency
#frequency = "10min"

# Reports retention when not able to upload
#retention = "1hour"

### Output

[output.database]
# PostgreSQL database on root servers
#url = "postgres://rudder@127.0.0.1/rudder"

# Password for database connection
password = "PASSWORD"

# Max pool size for database connections
#max_pool_size = 10

[output.upstream]
# Upstream relay on non-root servers

# URL of the upstream relay HTTP API
# DEPRECATED, replaced by host (and general.https_port)
#url = "https://127.0.0.1:3030"

# Hostname or IP of the relay's upstream
# Not used on root servers
# Port comes from global https_port setting
host = "rudder.example.com"

# Our upstream server certificate
# used only if "certificate_verification_type" is "rudder"
#server_certificate_file = "/var/rudder/cfengine-community/ppkeys/policy_server.cert"

# User for file uploads
#user = "rudder"

# Password for file uploads
password = "PASSWORD"

# Password used for new inventories
#default_password = "rudder"

# If false certificate validation is skipped completely
# DEPRECATED: use general.certificate_verification_model
#verify_certificates = true

[remote_run]
# Should the remote-run feature be enabled
#enabled = true

# Command to use for remote-run on our nodes
#command = "/opt/rudder/bin/rudder"

# Should we use sudo when running the remote-run command
#use_sudo = true

[shared_files]
# Path of files shared between individual nodes
#path = "/var/rudder/shared-files/"

[shared_files.cleanup]
# Job frequency
#frequency = "10min"

[shared_folder]
# Path of files shared to all the nodes
#path = "/var/rudder/configuration-repository/shared-files"

