# generated by rudderc
# @name condition_foreign_variable
# @version 1.0

function Condition-Foreign-Variable {
  [CmdletBinding()]
  param (
    [Parameter(Mandatory=$True)]
    [String]$ReportId,
    [Parameter(Mandatory=$True)]
    [String]$TechniqueName,
    [Rudder.PolicyMode]$PolicyMode
  )

  $ReportIdBase = $reportId.Substring(0,$reportId.Length-1)
  $localContext = [Rudder.Context]::new()
  $resourcesDir = $PSScriptRoot + "\resources"
  # --------------Method Call--------------- #
  $ReportId = $ReportIdBase+"f2c8e8b2-43d0-4ce2-ace7-fe5ad3ac7a16"
  $common_params = @{
    ClassPrefix = "chown -R ${owner}:${owner} ${path}"
    ComponentKey = "chown -R ${owner}:${owner} ${path}"
    ComponentName = "Command execution"
    PolicyMode = $PolicyMode
    ReportId = $ReportId
    TechniqueName = $TechniqueName
  }
  if ($localContext.evaluate("server_machine|group_sbu_cmcs__sles12_")) {
    $call_params = @{
      Command = "chown -R ${owner}:${owner} ${path}"
      PolicyMode = $PolicyMode
    }
    $call = Command-Execution @call_params
    $compute_params = $common_params + @{
      MethodCall = $call
    }
    $context = Compute-Method-Call @compute_params
    $localContext.merge($context)
  }
  else {
    Rudder-Report-NA @common_params
  }
}
