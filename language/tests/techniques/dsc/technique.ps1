# generated by rudderc
# @name technique_dsc
# @version 1.0

function Technique-Dsc {
  [CmdletBinding()]
  param (
    [Parameter(Mandatory=$True)]
    [String]$ReportId,
    [Parameter(Mandatory=$True)]
    [String]$TechniqueName,
    [Rudder.PolicyMode]$PolicyMode
  )

  $ReportIdBase = $reportId.Substring(0,$reportId.Length-1)
  $localContext = [Rudder.Context]::new()
  $resourcesDir = $PSScriptRoot + "\resources"
  # --------------Method Call--------------- #
  $ReportId = $ReportIdBase+"58fc35d7-7277-49d9-a6f5-a3ecb715d694"
  $common_params = @{
    ClassPrefix = "tmp"
    ComponentKey = "tmp"
    ComponentName = "Directory check exists"
    PolicyMode = $PolicyMode
    ReportId = $ReportId
    TechniqueName = $TechniqueName
  }
  Rudder-Report-NA @common_params
  # --------------Method Call--------------- #
  $ReportId = $ReportIdBase+"c00d3129-f612-4087-84ea-c1ae9b98f9d8"
  $common_params = @{
    ClassPrefix = "dsc"
    ComponentKey = "dsc"
    ComponentName = "Command execution"
    PolicyMode = $PolicyMode
    ReportId = $ReportId
    TechniqueName = $TechniqueName
  }
  $call_params = @{
    Command = "dsc"
    PolicyMode = $PolicyMode
  }
  $call = Command-Execution @call_params
  $compute_params = $common_params + @{
    MethodCall = $call
  }
  $context = Compute-Method-Call @compute_params
  $localContext.merge($context)
}
