#!/bin/sh

# Hooks parameter are passed by environment variable:
#
# - RUDDER_NODE_ID: the nodeId
# - RUDDER_NODE_HOSTNAME: the node fully qualified hostname
# - RUDDER_NODE_POLICY_SERVER_ID: the node policy server id
# - RUDDER_NODE_OS_NAME: OS normalized name (Linux distribution, Windows with version, etc)
# - RUDDER_NODE_OS_VERSION: OS version
# - RUDDER_NODE_OS_SP: OS service patch
# - RUDDER_NODE_OS_STRING: OS long string name
# - RUDDER_NODE_IPS: space separated list of IPs of that node
# - RUDDER_AGENT_TYPE: agent type ("cfengine-community" or "dsc")

# Errors code on hooks are interpreted as follow:
# - 0     : success, no log (appart if debug one)          , continue to next hook
# - 1-31  : error  , error   log in /var/log/rudder/webapp/, stop processing
# - 32-63 : warning, warning log in /var/log/rudder/webapp/, continue to next hook
# - 64-255: reserved for futur use case. Behavior may change without notice.

#
# This file is an example of a simple auto acceptation script. You can copy in current
# directory without the ".example" extension and make it executable to have all your nodes
# auto-accepted after they are saved as pending nodes.
#

# This is an example script that shows:
# - logging basic information about the new pending nodes,
# - querying more information about the node and selecting JSON part with `jq`
# - auto-accepting the node with an API request.

# In a real production script, you should store information about what is done in real log files,
# correctly rotated, or in journald.

LOG="/var/log/rudder/rudder-auto-accept-nodes.log"
echo "[$(date --iso-8601=s)] received inventory for pending node '${RUDDER_NODE_HOSTNAME}' (${RUDDER_NODE_ID})" >> ${LOG}

# Only a small subset of node attributes is given as parameters for that script (see above).
# You can get more information about the node attribute with an API request to node details
# (more info here: https://docs.rudder.io/api/#operation/nodeDetails).
# This is useful to implement your custom business rules.
# In that example, we want to only accept nodes with an 'accept' inventory hook's property that
# has value 'auto-accept' (more information about inventory hooks here:
# https://docs.rudder.io/reference/current/usage/advanced_node_management.html#_creating_a_node_inventory_hook ).
# We will use `jq` to extract the relevant information from the API call response.

MODE=$(curl -k -X GET -H "X-API-TOKEN: $(cat /var/rudder/run/api-token)" -H "Content-Type: application/json" \
  "https://localhost/rudder/api/latest/nodes/${RUDDER_NODE_ID}?include=minimal,properties" | \
  jq -r '.data.nodes[0].properties | map(select(.name = "accept"))[0].value')

#
# Here, we ask rudder to accept node when it has property 'accept' == 'auto-accept'.
#
if [ "${MODE}" == "auto-accept" ]; then
  # accept node
  curl -f -k -X POST -H "X-API-TOKEN: $(cat /var/rudder/run/api-token)" \
    "https://localhost/rudder/api/latest/nodes/pending/${RUDDER_NODE_ID}" -d 'status=accepted'

  if [ "$?" -eq 0 ]; then
    echo "[$(date --iso-8601=s)] node '${RUDDER_NODE_HOSTNAME}' (${RUDDER_NODE_ID}) auto-accepted" >> ${LOG}
  else
    echo "[$(date --iso-8601=s)] error when auto-accepting node '${RUDDER_NODE_HOSTNAME}' (${RUDDER_NODE_ID})" >> ${LOG}
    exit 32
  fi
else
  echo "[$(date --iso-8601=s)] not auto-accepting pending node '${RUDDER_NODE_HOSTNAME}' (${RUDDER_NODE_ID})" >> ${LOG}
fi

exit 0
