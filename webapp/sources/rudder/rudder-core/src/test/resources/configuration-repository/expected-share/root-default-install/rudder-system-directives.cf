# SPDX-License-Identifier: GPL-3.0-or-later
# SPDX-FileCopyrightText: 2021 Normation SAS

# This file is the main entry points for the bundle sequence for
# Rudder system directives. It is actually a list of method calls, and not
# a bundle sequence, which allows to add the technique or directives
# names as promiser.

body file control {

  inputs => {
    "common/1.0/common.cf",
    "common/1.0/cf-serverd.cf",
    "common/1.0/update.cf",
    "rudder-directives.cf",
    "rudder-system-directives.cf",
    "common/1.0/rudder-parameters.cf",
    "common/1.0/rudder-groups.cf",
    "common/1.0/hooks.cf",
    "common/1.0/cron-setup.cf",
    "common/1.0/site.cf",
    "common/1.0/monitoring.cf",
    "common/1.0/restart-services.cf",
    "common/1.0/internal-security.cf",
    "common/1.0/environment-variables.cf",
    "common/1.0/properties.cf",
    "common/1.0/reporting-http.cf",
    "inventory/1.0/fusionAgent.cf",
    "rudder-service-apache/1.0/apache/main.cf",
    "rudder-service-apache/1.0/apache/apache-certificate.cf",
    "rudder-service-apache/1.0/apache/system_rudder_apache_networks_configuration.cf",
    "rudder-service-apache/1.0/apache/system_rudder_apache_webdav_configuration.cf",
    "rudder-service-apache/1.0/apache/logrotate.cf",
    "rudder-service-postgresql/1.0/password-check.cf",
    "rudder-service-postgresql/1.0/main.cf",
    "rudder-service-relayd/1.0/main.cf",
    "rudder-service-relayd/1.0/common/relayd.cf",
    "rudder-service-relayd/1.0/common/logrotate.cf",
    "rudder-service-relayd/1.0/relay/propagatePromises.cf",
    "rudder-service-relayd/1.0/root/rudderRelayRootNa.cf",
    "rudder-service-slapd/1.0/main.cf",
    "rudder-service-slapd/1.0/logrotate.cf",
    "rudder-service-webapp/1.0/main.cf",
    "rudder-service-webapp/1.0/alive-check.cf",
    "rudder-service-webapp/1.0/compress-webapp-log.cf",
    "rudder-service-webapp/1.0/integrity-check.cf",
    "rudder-service-webapp/1.0/metrics-reporting.cf",
    "rudder-service-webapp/1.0/password-check.cf",
    "rudder-service-webapp/1.0/updateNcfHash.cf",
    "rudder-service-webapp/1.0/bootstrapRudderServer.cf",
    "server-common/1.0/reloadRudderServices.cf",
    "server-common/1.0/rudder_syslog.cf",
  };

}


bundle agent rudder_system_directives {
  # fully generated in bundle common va for iinitial promises
  # The directive sequence will be correctly indented by the generated variable so we can support multiline variable
  methods:
      "Rudder system policy: daily inventory/Inventory"                     usebundle => set_dry_run_mode("false");
      "Rudder system policy: daily inventory/Inventory"                     usebundle => run_inventory_all;
      "Rule for policy server root/Server rudder-service-apache - root"     usebundle => set_dry_run_mode("false");
      "Rule for policy server root/Server rudder-service-apache - root"     usebundle => run_rudder_service_apache_root;
      "Rule for policy server root/Server rudder-service-postgresql - root" usebundle => set_dry_run_mode("false");
      "Rule for policy server root/Server rudder-service-postgresql - root" usebundle => run_rudder_service_postgresql_root;
      "Rule for policy server root/Server rudder-service-relayd - root"     usebundle => set_dry_run_mode("false");
      "Rule for policy server root/Server rudder-service-relayd - root"     usebundle => run_rudder_service_relayd_root;
      "Rule for policy server root/Server rudder-service-slapd - root"      usebundle => set_dry_run_mode("false");
      "Rule for policy server root/Server rudder-service-slapd - root"      usebundle => run_rudder_service_slapd_root;
      "Rule for policy server root/Server rudder-service-webapp - root"     usebundle => set_dry_run_mode("false");
      "Rule for policy server root/Server rudder-service-webapp - root"     usebundle => run_rudder_service_webapp_root;
      "Rule for policy server root/Server server-common - root"             usebundle => set_dry_run_mode("false");
      "Rule for policy server root/Server server-common - root"             usebundle => run_server_common_root;
}
bundle agent run_inventory_all
{
  methods:
      "Rudder system policy: daily inventory/Inventory" usebundle => rudder_reporting_context_v4("inventory-all","inventory-all","inventory","","","inventory-allinventory-all");
      "Rudder system policy: daily inventory/Inventory" usebundle => disable_reporting;
      "Rudder system policy: daily inventory/Inventory" usebundle => doInventory;
      "Rudder system policy: daily inventory/Inventory" usebundle => clean_reporting_context;
}
bundle agent run_rudder_service_apache_root
{
  methods:
      "Rule for policy server root/Server rudder-service-apache - root" usebundle => rudder_reporting_context_v4("rudder-service-apache-root","policy-server-root","rudder-service-apache","","","rudder-service-apache-rootpolicy-server-root");
      "Rule for policy server root/Server rudder-service-apache - root" usebundle => enable_reporting;
      "Rule for policy server root/Server rudder-service-apache - root" usebundle => system_rudder_apache_configuration;
      "Rule for policy server root/Server rudder-service-apache - root" usebundle => clean_reporting_context;
}
bundle agent run_rudder_service_postgresql_root
{
  methods:
      "Rule for policy server root/Server rudder-service-postgresql - root" usebundle => rudder_reporting_context_v4("rudder-service-postgresql-root","policy-server-root","rudder-service-postgresql","","","rudder-service-postgresql-rootpolicy-server-root");
      "Rule for policy server root/Server rudder-service-postgresql - root" usebundle => enable_reporting;
      "Rule for policy server root/Server rudder-service-postgresql - root" usebundle => system_rudder_postgresql_configuration;
      "Rule for policy server root/Server rudder-service-postgresql - root" usebundle => clean_reporting_context;
}
bundle agent run_rudder_service_relayd_root
{
  methods:
      "Rule for policy server root/Server rudder-service-relayd - root" usebundle => rudder_reporting_context_v4("rudder-service-relayd-root","policy-server-root","rudder-service-relayd","","","rudder-service-relayd-rootpolicy-server-root");
      "Rule for policy server root/Server rudder-service-relayd - root" usebundle => enable_reporting;
      "Rule for policy server root/Server rudder-service-relayd - root" usebundle => system_rudder_relay_configuration;
      "Rule for policy server root/Server rudder-service-relayd - root" usebundle => clean_reporting_context;
}
bundle agent run_rudder_service_slapd_root
{
  methods:
      "Rule for policy server root/Server rudder-service-slapd - root" usebundle => rudder_reporting_context_v4("rudder-service-slapd-root","policy-server-root","rudder-service-slapd","","","rudder-service-slapd-rootpolicy-server-root");
      "Rule for policy server root/Server rudder-service-slapd - root" usebundle => enable_reporting;
      "Rule for policy server root/Server rudder-service-slapd - root" usebundle => system_rudder_slapd_configuration;
      "Rule for policy server root/Server rudder-service-slapd - root" usebundle => clean_reporting_context;
}
bundle agent run_rudder_service_webapp_root
{
  methods:
      "Rule for policy server root/Server rudder-service-webapp - root" usebundle => rudder_reporting_context_v4("rudder-service-webapp-root","policy-server-root","rudder-service-webapp","","","rudder-service-webapp-rootpolicy-server-root");
      "Rule for policy server root/Server rudder-service-webapp - root" usebundle => enable_reporting;
      "Rule for policy server root/Server rudder-service-webapp - root" usebundle => system_rudder_webapp;
      "Rule for policy server root/Server rudder-service-webapp - root" usebundle => clean_reporting_context;
}
bundle agent run_server_common_root
{
  methods:
      "Rule for policy server root/Server server-common - root" usebundle => rudder_reporting_context_v4("server-common-root","policy-server-root","server-common","","","server-common-rootpolicy-server-root");
      "Rule for policy server root/Server server-common - root" usebundle => enable_reporting;
      "Rule for policy server root/Server server-common - root" usebundle => system_reload_rudder_services;
      "Rule for policy server root/Server server-common - root" usebundle => clean_reporting_context;

}

