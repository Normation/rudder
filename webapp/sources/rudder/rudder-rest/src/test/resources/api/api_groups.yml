---
description: Get a group
method: GET
url: /api/latest/groups/0000f5d3-8c61-4d20-88a7-bb947705ba8a
response:
  code: 200
  content: >-
    {
      "action":"groupDetails",
      "id":"0000f5d3-8c61-4d20-88a7-bb947705ba8a",
      "result":"success",
      "data":{
        "groups":[
          {
            "id":"0000f5d3-8c61-4d20-88a7-bb947705ba8a",
            "displayName":"Real nodes",
            "description":"",
            "category":"category1",
            "query":{
              "select":"nodeAndPolicyServer",
              "composition":"or",
              "where":[
                {
                  "objectType":"node",
                  "attribute":"nodeId",
                  "comparator":"eq",
                  "value":"node1"
                },
                {
                  "objectType":"node",
                  "attribute":"nodeId",
                  "comparator":"eq",
                  "value":"node2"
                },
                {
                  "objectType":"node",
                  "attribute":"nodeId",
                  "comparator":"eq",
                  "value":"root"
                }
              ]
            },
           "nodeIds":[
              "node1",
              "node2",
              "root"
            ],
            "dynamic":false,
            "enabled":true,
            "groupClass":[
              "group_0000f5d3_8c61_4d20_88a7_bb947705ba8a",
              "group_real_nodes"
            ],
            "properties":[
              {"name":"stringParam","value":"string","inheritMode":"map","provider":"datasources"},
              {"name":"jsonParam","value":{"array":[5,6],"group":"string","json":{"g1":"g1"}}}
            ],
            "target":"group:0000f5d3-8c61-4d20-88a7-bb947705ba8a",
            "system":false
          }
        ]
      }
    }
---
description: Get a group inherited properties in JSON
method: GET
url: /api/latest/groups/0000f5d3-8c61-4d20-88a7-bb947705ba8a/inheritedProperties
response:
  code: 200
  content: >-
    {
      "action":"groupInheritedProperties",
      "id":"0000f5d3-8c61-4d20-88a7-bb947705ba8a",
      "result":"success",
      "data":{
        "groups":[
          {
            "groupId":"0000f5d3-8c61-4d20-88a7-bb947705ba8a",
            "properties":[
              {
                "name":"jsonParam",
                "value":{
                  "array":[5,6],
                  "group":"string",
                  "json":{"g1":"g1","var1":"val1","var2":"val2"},
                  "string":"a string"
                },
                "description":"a simple string param",
                "provider":"overridden",
                "hierarchy":{
                  "kind":"group",
                  "name":"Real nodes",
                  "id":"0000f5d3-8c61-4d20-88a7-bb947705ba8a",
                  "value":{"array":[5,6],"group":"string","json":{"g1":"g1"}},
                  "resolvedValue":{
                    "array":[5,6],
                    "group":"string",
                    "json":{"g1":"g1","var1":"val1","var2":"val2"},
                    "string":"a string"
                  },
                  "parent":{
                    "kind":"global",
                    "value":{
                      "array":[1,3,2],
                      "json":{"var1":"val1","var2":"val2"},
                      "string":"a string"
                    }
                  }
                },
                "hierarchyStatus":{
                  "hasChildTypeConflicts":false,
                  "fullHierarchy":{
                    "kind":"group",
                    "name":"Real nodes",
                    "id":"0000f5d3-8c61-4d20-88a7-bb947705ba8a",
                    "valueType":"Object",
                    "parent":{"kind":"global","valueType":"Object"}
                  }
                },
                "origval":{"array":[5,6],"group":"string","json":{"g1":"g1"}}
              },
              {
                "name":"modeParam",
                "value":"some string",
                "description":"a simple string param",
                "inheritMode":"opa",
                "provider":"inherited",
                "hierarchy":{"kind":"global","value":"some string"},
                "hierarchyStatus":{
                  "hasChildTypeConflicts":false,
                  "fullHierarchy":{"kind":"global","valueType":"String"}
                },
                "origval":"some string"
              },
              {
                "name":"rudder",
                "value":{"compliance_expiration_policy":{"mode":"expire_immediately"}},
                "description":"rudder system config",
                "provider":"inherited",
                "hierarchy":{
                  "kind":"global",
                  "value":{"compliance_expiration_policy":{"mode":"expire_immediately"}}
                },
                "hierarchyStatus":{
                  "hasChildTypeConflicts":false,
                  "fullHierarchy":{"kind":"global","valueType":"Object"}
                },
                "origval":{"compliance_expiration_policy":{"mode":"expire_immediately"}}
              },
              {
                "name":"stringParam",
                "value":"stringsome string",
                "description":"a simple string param",
                "inheritMode":"map",
                "provider":"overridden",
                "hierarchy":{
                  "kind":"group",
                  "name":"Real nodes",
                  "id":"0000f5d3-8c61-4d20-88a7-bb947705ba8a",
                  "value":"string",
                  "resolvedValue":"stringsome string",
                  "parent":{"kind":"global","value":"some string"}
                },
                "hierarchyStatus":{
                  "hasChildTypeConflicts":false,
                  "fullHierarchy":{
                    "kind":"group",
                    "name":"Real nodes",
                    "id":"0000f5d3-8c61-4d20-88a7-bb947705ba8a",
                    "valueType":"String",
                    "parent":{"kind":"global","valueType":"String"}
                  }
                },
                "origval":"string"
              },
              {
                "name":"systemParam",
                "value":"some string",
                "description":"a simple string param",
                "provider":"inherited",
                "hierarchy":{"kind":"global","value":"some string"},
                "hierarchyStatus":{
                  "hasChildTypeConflicts":false,
                  "fullHierarchy":{"kind":"global","valueType":"String"}
                },
                "origval":"some string"
              }
            ]
          }
        ]
      }
    }

---
description: Get a group inherited properties with hierarchy HTML
method: GET
url: /secure/api/groups/0000f5d3-8c61-4d20-88a7-bb947705ba8a/displayInheritedProperties
response:
  code: 200
  content: >-
    {
      "action":"groupDisplayInheritedProperties",
      "id":"0000f5d3-8c61-4d20-88a7-bb947705ba8a",
      "result":"success",
      "data":{
        "groups":[
          {
            "groupId":"0000f5d3-8c61-4d20-88a7-bb947705ba8a",
            "properties":[
              {
                "name":"jsonParam",
                "value":{
                  "array":[5,6],
                  "group":"string",
                  "json":{"g1":"g1","var1":"val1","var2":"val2"},
                  "string":"a string"
                },
                "description":"a simple string param",
                "provider":"overridden",
                "hierarchy":"<p>from <b>Global parameter </b>:<pre>{\n    \"array\" : [\n        1,\n        3,\n        2\n    ],\n    \"json\" : {\n        \"var1\" : \"val1\",\n        \"var2\" : \"val2\"\n    },\n    \"string\" : \"a string\"\n}\n</pre></p><p>from <b>Group Real nodes (0000f5d3-8c61-4d20-88a7-bb947705ba8a)</b>:<pre>{\n    \"array\" : [\n        5,\n        6\n    ],\n    \"group\" : \"string\",\n    \"json\" : {\n        \"g1\" : \"g1\"\n    }\n}\n</pre></p>",
                "hierarchyStatus":{
                  "hasChildTypeConflicts":false,
                  "fullHierarchy":{
                    "kind":"group",
                    "name":"Real nodes",
                    "id":"0000f5d3-8c61-4d20-88a7-bb947705ba8a",
                    "valueType":"Object",
                    "parent":{"kind":"global","valueType":"Object"}
                  }
                },
                "origval":{ "array":[5,6],"group":"string","json":{"g1":"g1"} }
              },
              {
                "name":"modeParam",
                "value":"some string",
                "description":"a simple string param",
                "inheritMode":"opa",
                "provider":"inherited",
                "hierarchy":"<p>from <b>Global parameter </b>:<pre>\"some string\"</pre></p>",
                "hierarchyStatus":{
                  "hasChildTypeConflicts":false,
                  "fullHierarchy":{"kind":"global","valueType":"String"}
                },
                "origval":"some string"
              },
              {
                "name":"rudder",
                "value":{ "compliance_expiration_policy":{"mode":"expire_immediately"} },
                "description":"rudder system config",
                "provider":"inherited",
                "hierarchy":"<p>from <b>Global parameter </b>:<pre>{\n    \"compliance_expiration_policy\" : {\n        \"mode\" : \"expire_immediately\"\n    }\n}\n</pre></p>",
                "hierarchyStatus":{
                  "hasChildTypeConflicts":false,
                  "fullHierarchy":{"kind":"global","valueType":"Object"}
                },
                "origval":{ "compliance_expiration_policy":{"mode":"expire_immediately"} }
              },
              {
                "name":"stringParam",
                "value":"stringsome string",
                "description":"a simple string param",
                "inheritMode":"map",
                "provider":"overridden",
                "hierarchy":"<p>from <b>Global parameter </b>:<pre>\"some string\"</pre></p><p>from <b>Group Real nodes (0000f5d3-8c61-4d20-88a7-bb947705ba8a)</b>:<pre>\"string\"</pre></p>",
                "hierarchyStatus":{
                  "hasChildTypeConflicts":false,
                  "fullHierarchy":{
                    "kind":"group",
                    "name":"Real nodes",
                    "id":"0000f5d3-8c61-4d20-88a7-bb947705ba8a",
                    "valueType":"String",
                    "parent":{"kind":"global","valueType":"String"}
                  }
                },
                "origval":"string"
              },
              {
                "name":"systemParam",
                "value":"some string",
                "description":"a simple string param",
                "provider":"inherited",
                "hierarchy":"<p>from <b>Global parameter </b>:<pre>\"some string\"</pre></p>",
                "hierarchyStatus":{
                  "hasChildTypeConflicts":false,
                  "fullHierarchy":{"kind":"global","valueType":"String"}
                },
                "origval":"some string"
              }
            ]
          }
        ]
      }
    }
---
description: Get a missing group
method: GET
url: /api/latest/groups/xxxxxxxx-2675-43b9-ab57-bfbab84346aa
response:
  code: 500
  content: >-
    {
      "action":"groupDetails",
      "result":"error",
      "errorDetails":"Group with id 'xxxxxxxx-2675-43b9-ab57-bfbab84346aa' was not found'"
    }
---
description: List groups
method: GET
url: /api/latest/groups
response:
  code: 200
  content: >-
    {
      "action":"listGroups",
      "result":"success",
      "data":{
        "groups":[
          {
            "id":"0000f5d3-8c61-4d20-88a7-bb947705ba8a",
            "displayName":"Real nodes",
            "description":"",
            "category":"category1",
            "query":{
              "select":"nodeAndPolicyServer",
              "composition":"or",
              "where":[
                {
                  "objectType":"node",
                  "attribute":"nodeId",
                  "comparator":"eq",
                  "value":"node1"
                },
                {
                  "objectType":"node",
                  "attribute":"nodeId",
                  "comparator":"eq",
                  "value":"node2"
                },
                {
                  "objectType":"node",
                  "attribute":"nodeId",
                  "comparator":"eq",
                  "value":"root"
                }
              ]
            },
            "nodeIds":["node1","node2","root"],
            "dynamic":false,
            "enabled":true,
            "groupClass":[
              "group_0000f5d3_8c61_4d20_88a7_bb947705ba8a",
              "group_real_nodes"
            ],
            "properties":[
              {"name":"stringParam","value":"string","inheritMode":"map","provider":"datasources"},
              {"name":"jsonParam","value":{"array":[5,6],"group":"string","json":{"g1":"g1"}}}
            ],
            "target":"group:0000f5d3-8c61-4d20-88a7-bb947705ba8a",
            "system":false
          },
          {
            "id":"1111f5d3-8c61-4d20-88a7-bb947705ba8a",
            "displayName":"Empty group",
            "description":"",
            "category":"GroupRoot",
            "nodeIds":[],
            "dynamic":false,
            "enabled":true,
            "groupClass":[
              "group_1111f5d3_8c61_4d20_88a7_bb947705ba8a",
              "group_empty_group"
            ],
            "properties":[],
            "target":"group:1111f5d3-8c61-4d20-88a7-bb947705ba8a",
            "system":false
          },
          {
            "id":"2222f5d3-8c61-4d20-88a7-bb947705ba8a",
            "displayName":"only root",
            "description":"",
            "category":"GroupRoot",
            "nodeIds":["root"],
            "dynamic":false,
            "enabled":true,
            "groupClass":[
              "group_2222f5d3_8c61_4d20_88a7_bb947705ba8a",
              "group_only_root"
            ],
            "properties":[],
            "target":"group:2222f5d3-8c61-4d20-88a7-bb947705ba8a",
            "system":false
          },
          {
            "id":"3333f5d3-8c61-4d20-88a7-bb947705ba8a",
            "displayName":"Even nodes",
            "description":"",
            "category":"GroupRoot",
            "nodeIds":["0","10","2","4","6","8"],
            "dynamic":false,
            "enabled":true,
            "groupClass":[
              "group_3333f5d3_8c61_4d20_88a7_bb947705ba8a",
              "group_even_nodes"
            ],
            "properties":[],
            "target":"group:3333f5d3-8c61-4d20-88a7-bb947705ba8a",
            "system":false
          },
          {
            "id":"4444f5d3-8c61-4d20-88a7-bb947705ba8a",
            "displayName":"Odd nodes",
            "description":"",
            "category":"GroupRoot",
            "nodeIds":["1","3","5","7","9"],
            "dynamic":false,
            "enabled":true,
            "groupClass":[
              "group_4444f5d3_8c61_4d20_88a7_bb947705ba8a",
              "group_odd_nodes"
            ],
            "properties":[],
            "target":"group:4444f5d3-8c61-4d20-88a7-bb947705ba8a",
            "system":false
          },
          {
            "id":"5555f5d3-8c61-4d20-88a7-bb947705ba8a",
            "displayName":"Nodes id divided by 3",
            "description":"",
            "category":"GroupRoot",
            "nodeIds":["0","3","6","9"],
            "dynamic":false,
            "enabled":true,
            "groupClass":[
              "group_5555f5d3_8c61_4d20_88a7_bb947705ba8a",
              "group_nodes_id_divided_by_3"
            ],
            "properties":[],
            "target":"group:5555f5d3-8c61-4d20-88a7-bb947705ba8a",
            "system":false
          },
          {
            "id":"6666f5d3-8c61-4d20-88a7-bb947705ba8a",
            "displayName":"Nodes id divided by 5",
            "description":"",
            "category":"GroupRoot",
            "nodeIds":["0","10","5"],
            "dynamic":false,
            "enabled":true,
            "groupClass":[
              "group_6666f5d3_8c61_4d20_88a7_bb947705ba8a",
              "group_nodes_id_divided_by_5"
            ],
            "properties":[],
            "target":"group:6666f5d3-8c61-4d20-88a7-bb947705ba8a",
            "system":false
          },
          {
            "id":"a-group-for-root-only",
            "displayName":"Serveurs [€ðŋ] cassés",
            "description":"Liste de l'ensemble de serveurs cassés à réparer",
            "category":"GroupRoot",
            "nodeIds":["root"],
            "dynamic":true,
            "enabled":true,
            "groupClass":[
              "group_a_group_for_root_only",
              "group_serveurs_______casses"
            ],
            "properties":[],
            "target":"group:a-group-for-root-only",
            "system":false
          },
          {
            "id" : "all-nodes",
            "displayName" : "All nodes",
            "description" : "All nodes known by Rudder(including Rudder policy servers)",
            "category" : "GroupRoot",
            "nodeIds" : [
              "0",
              "1",
              "10",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9"
            ],
            "dynamic" : false,
            "enabled" : true,
            "groupClass" : [
              "group_all_nodes",
              "group_all_nodes"
            ],
            "properties" : [],
            "target" : "group:all-nodes",
            "system" : true
          }
        ]
      }
    }
description: Create a node group (JSON)
method: PUT
url: /api/latest/groups
headers:
  - "Content-Type: application/json"
body: >-
  {
    "id": "3fa29229-1a4b-4fd6-9edd-af114289fc9a",
    "displayName": "Debian 10 only Node group from API",
    "description": "A node group for debian version 10",
    "category": "GroupRoot",
    "enabled": true,
    "properties": [{"name":"os", "value": { "name": "debian", "nickname":"Buster" }}],
    "query": {
      "select": "node",
      "composition": "and",
      "where": [
      {
        "objectType": "node",
        "attribute": "osName",
        "comparator": "eq",
        "value": "Debian"
      },
      {
        "objectType": "node",
        "attribute": "osVersion",
        "comparator": "regex",
        "value": "10\\..*"
      }
      ]
    }
  }
response:
  code: 200
  content: >-
    {
      "action":"createGroup",
      "id":"3fa29229-1a4b-4fd6-9edd-af114289fc9a",
      "result":"success",
      "data":{
        "groups":[
          {
            "id":"3fa29229-1a4b-4fd6-9edd-af114289fc9a",
            "displayName":"Debian 10 only Node group from API",
            "description":"A node group for debian version 10",
            "category":"GroupRoot",
            "query":{
              "select":"node",
              "composition":"and",
              "where":[
                {
                  "objectType":"node",
                  "attribute":"osName",
                  "comparator":"eq",
                  "value":"Debian"
                },
                {
                  "objectType":"node",
                  "attribute":"osVersion",
                  "comparator":"regex",
                  "value":"10\\..*"
                }
              ]
            },
            "nodeIds":[

            ],
            "dynamic":true,
            "enabled":true,
            "groupClass":[
              "group_3fa29229_1a4b_4fd6_9edd_af114289fc9a",
              "group_debian_10_only_node_group_from_api"
            ],
            "properties":[
              {
                "name":"os",
                "value":{
                  "name":"debian",
                  "nickname":"Buster"
                }
              }
            ],
            "target":"group:3fa29229-1a4b-4fd6-9edd-af114289fc9a",
            "system":false
          }
        ]
      }
    }
---
description: Create a node group (PARAMS)
method: PUT
url: /api/latest/groups
headers:
  - "Content-Type: application/x-www-form-urlencoded"
body:
params:
  id: "3fa29229-1a4b-4fd6-0001-af114289fc9a"
  displayName: "Debian 10 only Node group from API"
  description: "A node group for debian version 10"
  category: "GroupRoot"
  enabled: "true"
  system: "false"
  properties: >-
    [{"name":"os", "value": { "name": "debian", "nickname":"Buster" }}]
  query: >-
    {
    "select": "node",
    "composition": "and",
    "where": [
    {
      "objectType": "node",
      "attribute": "osName",
      "comparator": "eq",
      "value": "Debian"
    },
    {
      "objectType": "node",
      "attribute": "osVersion",
      "comparator": "regex",
      "value": "10\\..*"
    }
    ]
    }
response:
  code: 200
  content: >-
    {
      "action":"createGroup",
      "id":"3fa29229-1a4b-4fd6-0001-af114289fc9a",
      "result":"success",
      "data":{
        "groups":[
          {
            "id":"3fa29229-1a4b-4fd6-0001-af114289fc9a",
            "displayName":"Debian 10 only Node group from API",
            "description":"A node group for debian version 10",
            "category":"GroupRoot",
            "query":{
              "select":"node",
              "composition":"and",
              "where":[
                {
                  "objectType":"node",
                  "attribute":"osName",
                  "comparator":"eq",
                  "value":"Debian"
                },
                {
                  "objectType":"node",
                  "attribute":"osVersion",
                  "comparator":"regex",
                  "value":"10\\..*"
                }
              ]
            },
            "nodeIds":[

            ],
            "dynamic":true,
            "enabled":true,
            "groupClass":[
              "group_3fa29229_1a4b_4fd6_0001_af114289fc9a",
              "group_debian_10_only_node_group_from_api"
            ],
            "properties":[
              {
                "name":"os",
                "value":{
                  "name":"debian",
                  "nickname":"Buster"
                }
              }
            ],
            "target":"group:3fa29229-1a4b-4fd6-0001-af114289fc9a",
            "system":false
          }
        ]
      }
    }
---
description: Clone a node group (JSON)
method: PUT
url: /api/latest/groups
headers:
  - "Content-Type: application/json"
body: >-
  {
    "source": "3fa29229-1a4b-4fd6-9edd-af114289fc9a",
    "id": "00000000-cb9d-4f7b-abda-ca38c5d643ea",
    "displayName":"clone from api of debian group",
    "description":"Some long description"
  }
response:
  code: 200
  content: >-
    {
      "action":"cloneGroup",
      "id":"00000000-cb9d-4f7b-abda-ca38c5d643ea",
      "result":"success",
      "data":{
        "groups":[
          {
            "id":"00000000-cb9d-4f7b-abda-ca38c5d643ea",
            "displayName":"clone from api of debian group",
            "description":"Some long description",
            "category":"GroupRoot",
            "query":{
              "select":"node",
              "composition":"and",
              "where":[
                {
                  "objectType":"node",
                  "attribute":"osName",
                  "comparator":"eq",
                  "value":"Debian"
                },
                {
                  "objectType":"node",
                  "attribute":"osVersion",
                  "comparator":"regex",
                  "value":"10\\..*"
                }
              ]
            },
            "nodeIds":[],
            "dynamic":true,
            "enabled":true,
            "groupClass":[
              "group_00000000_cb9d_4f7b_abda_ca38c5d643ea",
              "group_clone_from_api_of_debian_group"
            ],
            "properties":[
              {
                "name":"os",
                "value":{
                  "name":"debian",
                  "nickname":"Buster"
                }
              }
            ],
            "target":"group:00000000-cb9d-4f7b-abda-ca38c5d643ea",
            "system":false
          }
        ]
      }
    }
---
description: Clone a node group (PARAMS)
method: PUT
url: /api/latest/groups
headers:
  - "Content-Type: application/x-www-form-urlencoded"
body:
params:
  source: "3fa29229-1a4b-4fd6-0001-af114289fc9a"
  id: "00000000-cb9d-4f7b-0001-ca38c5d643ea"
  displayName: "clone from api of debian group"
  description: "Some long description"
response:
  code: 200
  content: >-
    {
      "action":"cloneGroup",
      "id":"00000000-cb9d-4f7b-0001-ca38c5d643ea",
      "result":"success",
      "data":{
        "groups":[
          {
            "id":"00000000-cb9d-4f7b-0001-ca38c5d643ea",
            "displayName":"clone from api of debian group",
            "description":"Some long description",
            "category":"GroupRoot",
            "query":{
              "select":"node",
              "composition":"and",
              "where":[
                {
                  "objectType":"node",
                  "attribute":"osName",
                  "comparator":"eq",
                  "value":"Debian"
                },
                {
                  "objectType":"node",
                  "attribute":"osVersion",
                  "comparator":"regex",
                  "value":"10\\..*"
                }
              ]
            },
            "nodeIds":[],
            "dynamic":true,
            "enabled":true,
            "groupClass":[
              "group_00000000_cb9d_4f7b_0001_ca38c5d643ea",
              "group_clone_from_api_of_debian_group"
            ],
            "properties":[
              {
                "name":"os",
                "value":{
                  "name":"debian",
                  "nickname":"Buster"
                }
              }
            ],
            "target":"group:00000000-cb9d-4f7b-0001-ca38c5d643ea",
            "system":false
          }
        ]
      }
    }
---
description: Update a node group (JSON)
method: POST
url: /api/latest/groups/3fa29229-1a4b-4fd6-9edd-af114289fc9a
comment: notice that we don't have the update node list here (since the workkflow that triggers dyn group update is not finished)
headers:
  - "Content-Type: application/json"
body: >-
  {
    "id": "3fa29229-1a4b-4fd6-9edd-af114289fc9a",
    "displayName": "Debian 10 nodes, updated",
    "description": "description, updated",
    "enabled": false,
    "system": false,
    "properties":[
      {
        "name":"os",
        "value":{
          "name":"debian",
          "version":"10"
        }
      }
    ]
  }
response:
  code: 200
  content: >-
    {
      "action":"updateGroup",
      "id":"3fa29229-1a4b-4fd6-9edd-af114289fc9a",
      "result":"success",
      "data":{
        "groups":[
          {
            "id":"3fa29229-1a4b-4fd6-9edd-af114289fc9a",
            "displayName":"Debian 10 nodes, updated",
            "description":"description, updated",
            "category":"GroupRoot",
            "query":{
              "select":"node",
              "composition":"and",
              "where":[
                {
                  "objectType":"node",
                  "attribute":"osName",
                  "comparator":"eq",
                  "value":"Debian"
                },
                {
                  "objectType":"node",
                  "attribute":"osVersion",
                  "comparator":"regex",
                  "value":"10\\..*"
                }
              ]
            },
            "nodeIds":[ ],
            "dynamic":true,
            "enabled":false,
            "groupClass":[
              "group_3fa29229_1a4b_4fd6_9edd_af114289fc9a",
              "group_debian_10_nodes__updated"
            ],
            "properties":[
              {
                "name":"os",
                "value":{
                  "name":"debian",
                  "version":"10"
                }
              }
            ],
            "target":"group:3fa29229-1a4b-4fd6-9edd-af114289fc9a",
            "system":false
          }
        ]
      }
    }
---
description: Update a node group (PARAMS)
method: POST
url: /api/latest/groups/3fa29229-1a4b-4fd6-0001-af114289fc9a
comment: notice that we don't have the update node list here (since the workkflow that triggers dyn group update is not finished)
headers:
  - "Content-Type: application/x-www-form-urlencoded"
body:
params:
  id: "3fa29229-1a4b-4fd6-0001-af114289fc9a"
  displayName: "Debian 10 nodes, updated"
  description: "description, updated"
  enabled: "false"
  system: "false"
  properties: >-
    [
      {
        "name":"os",
        "value":{
          "name":"debian",
          "version":"10"
        }
      }
    ]
response:
  code: 200
  content: >-
    {
      "action":"updateGroup",
      "id":"3fa29229-1a4b-4fd6-0001-af114289fc9a",
      "result":"success",
      "data":{
        "groups":[
          {
            "id":"3fa29229-1a4b-4fd6-0001-af114289fc9a",
            "displayName":"Debian 10 nodes, updated",
            "description":"description, updated",
            "category":"GroupRoot",
            "query":{
              "select":"node",
              "composition":"and",
              "where":[
                {
                  "objectType":"node",
                  "attribute":"osName",
                  "comparator":"eq",
                  "value":"Debian"
                },
                {
                  "objectType":"node",
                  "attribute":"osVersion",
                  "comparator":"regex",
                  "value":"10\\..*"
                }
              ]
            },
            "nodeIds":[ ],
            "dynamic":true,
            "enabled":false,
            "groupClass":[
              "group_3fa29229_1a4b_4fd6_0001_af114289fc9a",
              "group_debian_10_nodes__updated"
            ],
            "properties":[
              {
                "name":"os",
                "value":{
                  "name":"debian",
                  "version":"10"
                }
              }
            ],
            "target":"group:3fa29229-1a4b-4fd6-0001-af114289fc9a",
            "system":false
          }
        ]
      }
    }
---
description: Get updated node group
method: GET
url: /api/latest/groups/3fa29229-1a4b-4fd6-9edd-af114289fc9a
response:
  code: 200
  content: >-
    {
      "action":"groupDetails",
      "id":"3fa29229-1a4b-4fd6-9edd-af114289fc9a",
      "result":"success",
      "data":{
        "groups":[
          {
            "id":"3fa29229-1a4b-4fd6-9edd-af114289fc9a",
            "displayName":"Debian 10 nodes, updated",
            "description":"description, updated",
            "category":"GroupRoot",
            "query":{
              "select":"node",
              "composition":"and",
              "where":[
                {
                  "objectType":"node",
                  "attribute":"osName",
                  "comparator":"eq",
                  "value":"Debian"
                },
                {
                  "objectType":"node",
                  "attribute":"osVersion",
                  "comparator":"regex",
                  "value":"10\\..*"
                }
              ]
            },
            "nodeIds":[ "node1", "node1-pending", "node2", "node2-pending" ],
            "dynamic":true,
            "enabled":false,
            "groupClass":[
              "group_3fa29229_1a4b_4fd6_9edd_af114289fc9a",
              "group_debian_10_nodes__updated"
            ],
            "properties":[
              {
                "name":"os",
                "value":{
                  "name":"debian",
                  "version":"10"
                }
              }
            ],
            "target":"group:3fa29229-1a4b-4fd6-9edd-af114289fc9a",
            "system":false
          }
        ]
      }
    }
---
description: Update a node group query
method: POST
url: /api/latest/groups/00000000-cb9d-4f7b-abda-ca38c5d643ea
headers:
  - "Content-Type: application/json"
body: >-
  {
    "id": "00000000-cb9d-4f7b-abda-ca38c5d643ea",
    "query": {
      "select": "nodeAndPolicyServer",
      "composition": "and",
      "transform": "invert",
      "where":[
        {
          "objectType": "node",
          "attribute": "nodeId",
          "comparator": "eq",
          "value": "11111111-cb9d-4f7b-abda-ca38c5d643ea"
        }
      ]
    }
  }
response:
  code: 200
  content: >-
    {
      "action":"updateGroup",
      "id":"00000000-cb9d-4f7b-abda-ca38c5d643ea",
      "result":"success",
      "data":{
        "groups":[
          {
            "id":"00000000-cb9d-4f7b-abda-ca38c5d643ea",
            "displayName":"clone from api of debian group",
            "description":"Some long description",
            "category":"GroupRoot",
            "query": {
              "select": "nodeAndPolicyServer",
              "composition": "and",
              "transform": "invert",
              "where":[
                {
                  "objectType": "node",
                  "attribute": "nodeId",
                  "comparator": "eq",
                  "value": "11111111-cb9d-4f7b-abda-ca38c5d643ea"
                }
              ]
            },
            "nodeIds":[],
            "dynamic":true,
            "enabled":true,
            "groupClass":[
              "group_00000000_cb9d_4f7b_abda_ca38c5d643ea",
              "group_clone_from_api_of_debian_group"
            ],
            "properties":[
              {
                "name":"os",
                "value":{
                  "name":"debian",
                  "nickname":"Buster"
                }
              }
            ],
            "target":"group:00000000-cb9d-4f7b-abda-ca38c5d643ea",
            "system":false
          }
        ]
      }
    }
---
description: Update a node group query with empty query comparator value
method: POST
url: /api/latest/groups/00000000-cb9d-4f7b-abda-ca38c5d643ea
headers:
  - "Content-Type: application/json"
body: >-
  {
    "id": "00000000-cb9d-4f7b-abda-ca38c5d643ea",
    "query": {
      "select": "nodeAndPolicyServer",
      "composition": "and",
      "transform": "invert",
      "where":[
        {
          "objectType": "node",
          "attribute": "nodeId",
          "comparator": "eq",
          "value": ""
        }
      ]
    }
  }
response:
  code: 200
  content: >-
    {
      "action":"updateGroup",
      "id":"00000000-cb9d-4f7b-abda-ca38c5d643ea",
      "result":"success",
      "data":{
        "groups":[
          {
            "id":"00000000-cb9d-4f7b-abda-ca38c5d643ea",
            "displayName":"clone from api of debian group",
            "description":"Some long description",
            "category":"GroupRoot",
            "query": {
              "select": "nodeAndPolicyServer",
              "composition": "and",
              "transform": "invert",
              "where":[
                {
                  "objectType": "node",
                  "attribute": "nodeId",
                  "comparator": "eq",
                  "value": ""
                }
              ]
            },
            "nodeIds":[],
            "dynamic":true,
            "enabled":true,
            "groupClass":[
              "group_00000000_cb9d_4f7b_abda_ca38c5d643ea",
              "group_clone_from_api_of_debian_group"
            ],
            "properties":[
              {
                "name":"os",
                "value":{
                  "name":"debian",
                  "nickname":"Buster"
                }
              }
            ],
            "target":"group:00000000-cb9d-4f7b-abda-ca38c5d643ea",
            "system":false
          }
        ]
      }
    }
---
description: Move a node group to a new category
method: POST
url: /api/latest/groups/3fa29229-1a4b-4fd6-9edd-af114289fc9a
headers:
  - "Content-Type: application/json"
body: >-
  {
    "category": "category1"
  }
response:
  code: 200
  content: >-
    {
      "action":"updateGroup",
      "id":"3fa29229-1a4b-4fd6-9edd-af114289fc9a",
      "result":"success",
      "data":{
        "groups":[
          {
            "id":"3fa29229-1a4b-4fd6-9edd-af114289fc9a",
            "displayName":"Debian 10 nodes, updated",
            "description":"description, updated",
            "category":"category1",
            "query":{
              "select":"node",
              "composition":"and",
              "where":[
                {
                  "objectType":"node",
                  "attribute":"osName",
                  "comparator":"eq",
                  "value":"Debian"
                },
                {
                  "objectType":"node",
                  "attribute":"osVersion",
                  "comparator":"regex",
                  "value":"10\\..*"
                }
              ]
            },
            "nodeIds":[
              "node1",
              "node1-pending",
              "node2",
              "node2-pending"
            ],
            "dynamic":true,
            "enabled":false,
            "groupClass":[
              "group_3fa29229_1a4b_4fd6_9edd_af114289fc9a",
              "group_debian_10_nodes__updated"
            ],
            "properties":[
              {
                "name":"os",
                "value":{
                  "name":"debian",
                  "version":"10"
                }
              }
            ],
            "target":"group:3fa29229-1a4b-4fd6-9edd-af114289fc9a",
            "system":false
          }
        ]
      }
    }
---
description: Move a node group to a new category
method: POST
url: /api/latest/groups/3fa29229-1a4b-4fd6-0001-af114289fc9a
headers:
  - "Content-Type: application/x-www-form-urlencoded"
body:
params:
  category: "category1"
response:
  code: 200
  content: >-
    {
      "action":"updateGroup",
      "id":"3fa29229-1a4b-4fd6-0001-af114289fc9a",
      "result":"success",
      "data":{
        "groups":[
          {
            "id":"3fa29229-1a4b-4fd6-0001-af114289fc9a",
            "displayName":"Debian 10 nodes, updated",
            "description":"description, updated",
            "category":"category1",
            "query":{
              "select":"node",
              "composition":"and",
              "where":[
                {
                  "objectType":"node",
                  "attribute":"osName",
                  "comparator":"eq",
                  "value":"Debian"
                },
                {
                  "objectType":"node",
                  "attribute":"osVersion",
                  "comparator":"regex",
                  "value":"10\\..*"
                }
              ]
            },
            "nodeIds":[
              "node1",
              "node1-pending",
              "node2",
              "node2-pending"
            ],
            "dynamic":true,
            "enabled":false,
            "groupClass":[
              "group_3fa29229_1a4b_4fd6_0001_af114289fc9a",
              "group_debian_10_nodes__updated"
            ],
            "properties":[
              {
                "name":"os",
                "value":{
                  "name":"debian",
                  "version":"10"
                }
              }
            ],
            "target":"group:3fa29229-1a4b-4fd6-0001-af114289fc9a",
            "system":false
          }
        ]
      }
    }
---
description: Delete a node group
method: DELETE
url: /api/latest/groups/3fa29229-1a4b-4fd6-9edd-af114289fc9a
response:
  code: 200
  content: >-
    {
      "action":"deleteGroup",
      "id":"3fa29229-1a4b-4fd6-9edd-af114289fc9a",
      "result":"success",
      "data":{
        "groups":[
          {
            "id":"3fa29229-1a4b-4fd6-9edd-af114289fc9a",
            "displayName":"Debian 10 nodes, updated",
            "description":"description, updated",
            "category":"GroupRoot",
            "query":{
              "select":"node",
              "composition":"and",
              "where":[
                {
                  "objectType":"node",
                  "attribute":"osName",
                  "comparator":"eq",
                  "value":"Debian"
                },
                {
                  "objectType":"node",
                  "attribute":"osVersion",
                  "comparator":"regex",
                  "value":"10\\..*"
                }
              ]
            },
            "nodeIds":[
              "node1",
              "node1-pending",
              "node2",
              "node2-pending"
            ],
            "dynamic":true,
            "enabled":false,
            "groupClass":[
              "group_3fa29229_1a4b_4fd6_9edd_af114289fc9a",
              "group_debian_10_nodes__updated"
            ],
            "properties":[
              {
                "name":"os",
                "value":{
                  "name":"debian",
                  "version":"10"
                }
              }
            ],
            "target":"group:3fa29229-1a4b-4fd6-9edd-af114289fc9a",
            "system":false
          }
        ]
      }
    }
---
description: Delete a node group (PARAMS)
method: DELETE
url: /api/latest/groups/3fa29229-1a4b-4fd6-0001-af114289fc9a
response:
  code: 200
  content: >-
    {
      "action":"deleteGroup",
      "id":"3fa29229-1a4b-4fd6-0001-af114289fc9a",
      "result":"success",
      "data":{
        "groups":[
          {
            "id":"3fa29229-1a4b-4fd6-0001-af114289fc9a",
            "displayName":"Debian 10 nodes, updated",
            "description":"description, updated",
            "category":"GroupRoot",
            "query":{
              "select":"node",
              "composition":"and",
              "where":[
                {
                  "objectType":"node",
                  "attribute":"osName",
                  "comparator":"eq",
                  "value":"Debian"
                },
                {
                  "objectType":"node",
                  "attribute":"osVersion",
                  "comparator":"regex",
                  "value":"10\\..*"
                }
              ]
            },
            "nodeIds":[
              "node1",
              "node1-pending",
              "node2",
              "node2-pending"
            ],
            "dynamic":true,
            "enabled":false,
            "groupClass":[
              "group_3fa29229_1a4b_4fd6_0001_af114289fc9a",
              "group_debian_10_nodes__updated"
            ],
            "properties":[
              {
                "name":"os",
                "value":{
                  "name":"debian",
                  "version":"10"
                }
              }
            ],
            "target":"group:3fa29229-1a4b-4fd6-0001-af114289fc9a",
            "system":false
          }
        ]
      }
    }
---
description: Delete a non-existing group with success
method: DELETE
url: /api/latest/groups/a-non-existing-group
response:
  code: 200
  content: >-
    {
      "action" : "deleteGroup",
      "id" : "a-non-existing-group",
      "result" : "success",
      "data" : {
        "groups" : [
          {
            "id" : "a-non-existing-group",
            "displayName" : "",
            "description" : "",
            "category" : "",
            "nodeIds" : [],
            "dynamic" : false,
            "enabled" : false,
            "groupClass" : [],
            "properties" : [],
            "target" : "",
            "system" : false
          }
        ]
      }
    }
---
description: Delete a system group with error
method: DELETE
url: /api/latest/groups/all-nodes
response:
  code: 500
  content: >-
    {
      "action" : "deleteGroup",
      "result" : "error",
      "errorDetails" : "Could not delete group 'all-nodes', cause is: system groups cannot be deleted."
    }
---
description: Create a node group category (JSON)
method: PUT
url: /api/latest/groups/categories
headers:
  - "Content-Type: application/json"
body: >-
  {
    "parent": "GroupRoot",
    "name": "category 2",
    "id": "219b9c98-3d1e-44c9-aff5-95b4fc7c4ada"
  }
response:
  code: 200
  content: >-
    {
      "action":"createGroupCategory",
      "result":"success",
      "data":{
        "groupCategories":
          {
            "id":"219b9c98-3d1e-44c9-aff5-95b4fc7c4ada",
            "name": "category 2",
            "description":"",
            "parent": "GroupRoot",
            "categories":[],
            "groups":[],
            "targets":[]
          }
      }
    }
---
description: Create a node group category (PARAMS)
method: PUT
url: /api/latest/groups/categories
headers:
  - "Content-Type: application/json"
body: >-
  {
    "parent": "GroupRoot",
    "name": "category 2",
    "id": "219b9c98-3d1e-44c9-0001-95b4fc7c4ada"
  }
response:
  code: 200
  content: >-
    {
      "action":"createGroupCategory",
      "result":"success",
      "data":{
        "groupCategories":
          {
            "id":"219b9c98-3d1e-44c9-0001-95b4fc7c4ada",
            "name": "category 2",
            "description":"",
            "parent": "GroupRoot",
            "categories":[],
            "groups":[],
            "targets":[]
          }
      }
    }
---
description: Move group category 2 into group category 1 (JSON)
method: POST
url: /api/latest/groups/categories/219b9c98-3d1e-44c9-aff5-95b4fc7c4ada
headers:
  - "Content-Type: application/json"
body: >-
  {
    "parent": "category1",
    "name": "category 2 update",
    "description": "category 2"
  }
response:
  code: 200
  content: >-
    {
      "action":"updateGroupCategory",
      "id":"219b9c98-3d1e-44c9-aff5-95b4fc7c4ada",
      "result":"success",
      "data":{
        "groupCategories":
          {
            "id":"219b9c98-3d1e-44c9-aff5-95b4fc7c4ada",
            "name": "category 2 update",
            "description":"category 2",
            "parent": "category1",
            "categories":[],
            "groups":[],
            "targets":[]
          }
      }
    }
---
description: Move group category 2 into group category 1 (PARAMS)
method: POST
url: /api/latest/groups/categories/219b9c98-3d1e-44c9-0001-95b4fc7c4ada
headers:
  - "Content-Type: application/json"
body: >-
  {
    "parent": "category1",
    "name": "category 2 update",
    "description": "category 2"
  }
response:
  code: 200
  content: >-
    {
      "action":"updateGroupCategory",
      "id":"219b9c98-3d1e-44c9-0001-95b4fc7c4ada",
      "result":"success",
      "data":{
        "groupCategories":
          {
            "id":"219b9c98-3d1e-44c9-0001-95b4fc7c4ada",
            "name": "category 2 update",
            "description":"category 2",
            "parent": "category1",
            "categories":[],
            "groups":[],
            "targets":[]
          }
      }
    }
---
description: Fail to update group category name
method: POST
url: /api/latest/groups/categories/219b9c98-4c2f-44c9-aff5-95b4fc7c4ada
headers:
  - "Content-Type: application/json"
body: >-
  {
    "parent": "GroupRoot",
    "name": "sh"
  }
response:
  code: 500
  content: >-
    {
      "action":"updateGroupCategory",
      "id":"219b9c98-4c2f-44c9-aff5-95b4fc7c4ada",
      "result" : "error",
      "errorDetails" : "Could not update Group category '219b9c98-4c2f-44c9-aff5-95b4fc7c4ada'; cause was: Unexpected: (Group category name 'sh' must at least have a 3 character size)"
    }
---
description: Fail to create a node group category without name
method: PUT
url: /api/latest/groups/categories
headers:
  - "Content-Type: application/json"
body: >-
  {
    "parent": "GroupRoot",
    "id": "219b9c98-4c2f-44c9-aff5-95b4fc7c4ada"
  }
response:
  code: 500
  content: >-
    {
      "action":"createGroupCategory",
      "result" : "error",
      "errorDetails" : "Could not create group category; cause was: Inconsistency: Could not create group Category, cause: name is not defined"
    }
---
description: Fail to create a node group category with name too short
method: PUT
url: /api/latest/groups/categories
headers:
  - "Content-Type: application/json"
body: >-
  {
    "parent": "GroupRoot",
    "name": "sh",
    "id": "219b9c98-4c2f-44c9-aff5-95b4fc7c4ada"
  }
response:
  code: 500
  content: >-
    {
      "action":"createGroupCategory",
      "result" : "error",
      "errorDetails" : "Could not create group category; cause was: Unexpected: (Group category name 'sh' must at least have a 3 character size)"
    }
---
description: Delete a group category
method: DELETE
url: /api/latest/groups/categories/category-to-be-deleted
response:
  code: 200
  content: >-
    {
      "action" : "deleteGroupCategory",
      "id" : "category-to-be-deleted",
      "result" : "success",
      "data" : {
        "groupCategories" : {
          "id" : "category-to-be-deleted",
          "name" : "a category to be deleted",
          "description" : "no life",
          "parent" : "GroupRoot",
          "categories" : [],
          "groups" : [],
          "targets" : []
        }
      }
    }
---
description: Delete a system group category
method: DELETE
url: /api/latest/groups/categories/system-category1
response:
  code: 500
  content: >-
    {
      "action" : "deleteGroupCategory",
      "id" : "system-category1",
      "result" : "error",
      "errorDetails" : "Could not delete Group category 'system-category1'; cause was: Inconsistency: Could not delete group category 'system-category1', cause is: system categories cannot be deleted."
    }
---
description: Get minimal info on group category category1
method: GET
url: /api/latest/groups/categories/category1
response:
  code: 200
  content: >-
    {
      "action":"getGroupCategoryDetails",
      "id":"category1",
      "result":"success",
      "data":{
        "groupCategories":{
          "id":"category1",
          "name":"category 1",
          "description":"the first category",
          "parent":"GroupRoot",
          "categories":[
            "219b9c98-3d1e-44c9-0001-95b4fc7c4ada",
            "219b9c98-3d1e-44c9-aff5-95b4fc7c4ada"
          ],
          "groups":[
            "0000f5d3-8c61-4d20-88a7-bb947705ba8a"
          ],
          "targets":[]
        }
      }
    }
---
description: List all group categories and group in a tree format
method: GET
url: /api/latest/groups/tree
response:
  code: 200
  content: >-
    {
      "action" : "getGroupTree",
      "result" : "success",
      "data" : {
        "groupCategories" : {
          "id" : "GroupRoot",
          "name" : "GroupRoot",
          "description" : "root of group categories",
          "parent" : "GroupRoot",
          "categories" : [
            {
              "id" : "219b9c98-3d1e-44c9-0001-95b4fc7c4ada",
              "name" : "category 2",
              "description" : "",
              "parent" : "GroupRoot",
              "categories" : [],
              "groups" : [],
              "targets" : []
            },
            {
              "id" : "219b9c98-3d1e-44c9-aff5-95b4fc7c4ada",
              "name" : "category 2",
              "description" : "",
              "parent" : "GroupRoot",
              "categories" : [],
              "groups" : [],
              "targets" : []
            },
            {
              "id" : "category1",
              "name" : "category 1",
              "description" : "the first category",
              "parent" : "GroupRoot",
              "categories" : [
                {
                  "id" : "219b9c98-3d1e-44c9-0001-95b4fc7c4ada",
                  "name" : "category 2 update",
                  "description" : "category 2",
                  "parent" : "category1",
                  "categories" : [],
                  "groups" : [],
                  "targets" : []
                },
                {
                  "id" : "219b9c98-3d1e-44c9-aff5-95b4fc7c4ada",
                  "name" : "category 2 update",
                  "description" : "category 2",
                  "parent" : "category1",
                  "categories" : [],
                  "groups" : [],
                  "targets" : []
                }
              ],
              "groups" : [
                {
                  "id" : "0000f5d3-8c61-4d20-88a7-bb947705ba8a",
                  "displayName" : "Real nodes",
                  "description" : "",
                  "category" : "category1",
                  "query" : {
                    "select" : "nodeAndPolicyServer",
                    "composition" : "or",
                    "where" : [
                      {
                        "objectType" : "node",
                        "attribute" : "nodeId",
                        "comparator" : "eq",
                        "value" : "node1"
                      },
                      {
                        "objectType" : "node",
                        "attribute" : "nodeId",
                        "comparator" : "eq",
                        "value" : "node2"
                      },
                      {
                        "objectType" : "node",
                        "attribute" : "nodeId",
                        "comparator" : "eq",
                        "value" : "root"
                      }
                    ]
                  },
                  "nodeIds" : [
                    "node1",
                    "node2",
                    "root"
                  ],
                  "dynamic" : false,
                  "enabled" : true,
                  "groupClass" : [
                    "group_0000f5d3_8c61_4d20_88a7_bb947705ba8a",
                    "group_real_nodes"
                  ],
                  "properties" : [
                    {
                      "name" : "stringParam",
                      "value" : "string",
                      "inheritMode" : "map",
                      "provider" : "datasources"
                    },
                    {
                      "name" : "jsonParam",
                      "value" : {
                        "array" : [
                          5,
                          6
                        ],
                        "group" : "string",
                        "json" : {
                          "g1" : "g1"
                        }
                      }
                    }
                  ],
                  "target" : "group:0000f5d3-8c61-4d20-88a7-bb947705ba8a",
                  "system" : false
                }
              ],
              "targets" : []
            },
            {
              "id" : "system-category1",
              "name" : "system category 1",
              "description" : "a system group category",
              "parent" : "GroupRoot",
              "categories" : [],
              "groups" : [],
              "targets" : []
            }
          ],
          "groups" : [
            {
              "id" : "00000000-cb9d-4f7b-0001-ca38c5d643ea",
              "displayName" : "clone from api of debian group",
              "description" : "Some long description",
              "category" : "GroupRoot",
              "query" : {
                "select" : "node",
                "composition" : "and",
                "where" : [
                  {
                    "objectType" : "node",
                    "attribute" : "osName",
                    "comparator" : "eq",
                    "value" : "Debian"
                  },
                  {
                    "objectType" : "node",
                    "attribute" : "osVersion",
                    "comparator" : "regex",
                    "value" : "10\\..*"
                  }
                ]
              },
              "nodeIds" : [],
              "dynamic" : true,
              "enabled" : true,
              "groupClass" : [
                "group_00000000_cb9d_4f7b_0001_ca38c5d643ea",
                "group_clone_from_api_of_debian_group"
              ],
              "properties" : [
                {
                  "name" : "os",
                  "value" : {
                    "name" : "debian",
                    "nickname" : "Buster"
                  }
                }
              ],
              "target" : "group:00000000-cb9d-4f7b-0001-ca38c5d643ea",
              "system" : false
            },
            {
              "id" : "00000000-cb9d-4f7b-abda-ca38c5d643ea",
              "displayName" : "clone from api of debian group",
              "description" : "Some long description",
              "category" : "GroupRoot",
              "query": {
                "select": "nodeAndPolicyServer",
                "composition": "and",
                "transform": "invert",
                "where":[
                  {
                    "objectType": "node",
                    "attribute": "nodeId",
                    "comparator": "eq",
                    "value": ""
                  }
                ]
              },
              "nodeIds" : [],
              "dynamic" : true,
              "enabled" : true,
              "groupClass" : [
                "group_00000000_cb9d_4f7b_abda_ca38c5d643ea",
                "group_clone_from_api_of_debian_group"
              ],
              "properties" : [
                {
                  "name" : "os",
                  "value" : {
                    "name" : "debian",
                    "nickname" : "Buster"
                  }
                }
              ],
              "target" : "group:00000000-cb9d-4f7b-abda-ca38c5d643ea",
              "system" : false
            },
            {
              "id" : "1111f5d3-8c61-4d20-88a7-bb947705ba8a",
              "displayName" : "Empty group",
              "description" : "",
              "category" : "GroupRoot",
              "nodeIds" : [],
              "dynamic" : false,
              "enabled" : true,
              "groupClass" : [
                "group_1111f5d3_8c61_4d20_88a7_bb947705ba8a",
                "group_empty_group"
              ],
              "properties" : [],
              "target" : "group:1111f5d3-8c61-4d20-88a7-bb947705ba8a",
              "system" : false
            },
            {
              "id" : "2222f5d3-8c61-4d20-88a7-bb947705ba8a",
              "displayName" : "only root",
              "description" : "",
              "category" : "GroupRoot",
              "nodeIds" : [
                "root"
              ],
              "dynamic" : false,
              "enabled" : true,
              "groupClass" : [
                "group_2222f5d3_8c61_4d20_88a7_bb947705ba8a",
                "group_only_root"
              ],
              "properties" : [],
              "target" : "group:2222f5d3-8c61-4d20-88a7-bb947705ba8a",
              "system" : false
            },
            {
              "id" : "3333f5d3-8c61-4d20-88a7-bb947705ba8a",
              "displayName" : "Even nodes",
              "description" : "",
              "category" : "GroupRoot",
              "nodeIds" : [
                "0",
                "10",
                "2",
                "4",
                "6",
                "8"
              ],
              "dynamic" : false,
              "enabled" : true,
              "groupClass" : [
                "group_3333f5d3_8c61_4d20_88a7_bb947705ba8a",
                "group_even_nodes"
              ],
              "properties" : [],
              "target" : "group:3333f5d3-8c61-4d20-88a7-bb947705ba8a",
              "system" : false
            },
            {
              "id" : "4444f5d3-8c61-4d20-88a7-bb947705ba8a",
              "displayName" : "Odd nodes",
              "description" : "",
              "category" : "GroupRoot",
              "nodeIds" : [
                "1",
                "3",
                "5",
                "7",
                "9"
              ],
              "dynamic" : false,
              "enabled" : true,
              "groupClass" : [
                "group_4444f5d3_8c61_4d20_88a7_bb947705ba8a",
                "group_odd_nodes"
              ],
              "properties" : [],
              "target" : "group:4444f5d3-8c61-4d20-88a7-bb947705ba8a",
              "system" : false
            },
            {
              "id" : "5555f5d3-8c61-4d20-88a7-bb947705ba8a",
              "displayName" : "Nodes id divided by 3",
              "description" : "",
              "category" : "GroupRoot",
              "nodeIds" : [
                "0",
                "3",
                "6",
                "9"
              ],
              "dynamic" : false,
              "enabled" : true,
              "groupClass" : [
                "group_5555f5d3_8c61_4d20_88a7_bb947705ba8a",
                "group_nodes_id_divided_by_3"
              ],
              "properties" : [],
              "target" : "group:5555f5d3-8c61-4d20-88a7-bb947705ba8a",
              "system" : false
            },
            {
              "id" : "6666f5d3-8c61-4d20-88a7-bb947705ba8a",
              "displayName" : "Nodes id divided by 5",
              "description" : "",
              "category" : "GroupRoot",
              "nodeIds" : [
                "0",
                "10",
                "5"
              ],
              "dynamic" : false,
              "enabled" : true,
              "groupClass" : [
                "group_6666f5d3_8c61_4d20_88a7_bb947705ba8a",
                "group_nodes_id_divided_by_5"
              ],
              "properties" : [],
              "target" : "group:6666f5d3-8c61-4d20-88a7-bb947705ba8a",
              "system" : false
            },
            {
              "id" : "a-group-for-root-only",
              "displayName" : "Serveurs [€ðŋ] cassés",
              "description" : "Liste de l'ensemble de serveurs cassés à réparer",
              "category" : "GroupRoot",
              "nodeIds" : [
                "root"
              ],
              "dynamic" : true,
              "enabled" : true,
              "groupClass" : [
                "group_a_group_for_root_only",
                "group_serveurs_______casses"
              ],
              "properties" : [],
              "target" : "group:a-group-for-root-only",
              "system" : false
            },
            {
              "id" : "all-nodes",
              "displayName" : "All nodes",
              "description" : "All nodes known by Rudder (including Rudder policy servers)",
              "category" : "GroupRoot",
              "nodeIds" : [
                "0",
                "1",
                "10",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9"
              ],
              "dynamic" : false,
              "enabled" : true,
              "groupClass" : [
                "group_all_nodes",
                "group_all_nodes"
              ],
              "properties" : [],
              "target" : "group:all-nodes",
              "system" : true
            }
          ],
          "targets" : [
            {
              "id" : "policyServer:root",
              "displayName" : "special:policyServer_root",
              "description" : "The root policy server",
              "enabled" : true,
              "target" : "policyServer:root"
            },
            {
              "id" : "special:all_exceptPolicyServers",
              "displayName" : "special:all_exceptPolicyServers",
              "description" : "All groups without policy servers",
              "enabled" : true,
              "target" : "special:all_exceptPolicyServers"
            },
            {
              "id" : "special:all",
              "displayName" : "special:all",
              "description" : "All nodes",
              "enabled" : true,
              "target" : "special:all"
            }
          ]
        }
      }
    }


#
# API GROUPSINTERNAL
# Testing here because it uses changes from group test
#
---
description: Get the tree of groups with bare minimum group information
method: GET
url: /secure/api/groupsinternal/categorytree
response:
  code: 200
  content: >-
    {
      "action" : "getGroupCategoryTree",
      "result" : "success",
      "data" : {
        "id" : "GroupRoot",
        "name" : "GroupRoot",
        "description" : "root of group categories",
        "categories" : [
          {
            "id" : "219b9c98-3d1e-44c9-0001-95b4fc7c4ada",
            "name" : "category 2",
            "description" : "",
            "categories" : [],
            "groups" : [],
            "targets" : []
          },
          {
            "id" : "219b9c98-3d1e-44c9-aff5-95b4fc7c4ada",
            "name" : "category 2",
            "description" : "",
            "categories" : [],
            "groups" : [],
            "targets" : []
          },
          {
            "id" : "category1",
            "name" : "category 1",
            "description" : "the first category",
            "categories" : [
              {
                "id" : "219b9c98-3d1e-44c9-0001-95b4fc7c4ada",
                "name" : "category 2 update",
                "description" : "category 2",
                "categories" : [],
                "groups" : [],
                "targets" : []
              },
              {
                "id" : "219b9c98-3d1e-44c9-aff5-95b4fc7c4ada",
                "name" : "category 2 update",
                "description" : "category 2",
                "categories" : [],
                "groups" : [],
                "targets" : []
              }
            ],
            "groups" : [
              {
                "id" : "0000f5d3-8c61-4d20-88a7-bb947705ba8a",
                "displayName" : "Real nodes",
                "description" : "",
                "category" : "category1",
                "dynamic" : false,
                "enabled" : true,
                "target" : "group:0000f5d3-8c61-4d20-88a7-bb947705ba8a"
              }
            ],
            "targets" : []
          },
          {
            "id" : "system-category1",
            "name" : "system category 1",
            "description" : "a system group category",
            "categories" : [],
            "groups" : [],
            "targets" : []
          }
        ],
        "groups" : [
          {
            "id" : "00000000-cb9d-4f7b-abda-ca38c5d643ea",
            "displayName" : "clone from api of debian group",
            "description" : "Some long description",
            "category" : "GroupRoot",
            "dynamic" : true,
            "enabled" : true,
            "target" : "group:00000000-cb9d-4f7b-abda-ca38c5d643ea"
          },
          {
            "id" : "6666f5d3-8c61-4d20-88a7-bb947705ba8a",
            "displayName" : "Nodes id divided by 5",
            "description" : "",
            "category" : "GroupRoot",
            "dynamic" : false,
            "enabled" : true,
            "target" : "group:6666f5d3-8c61-4d20-88a7-bb947705ba8a"
          },
          {
            "id" : "3333f5d3-8c61-4d20-88a7-bb947705ba8a",
            "displayName" : "Even nodes",
            "description" : "",
            "category" : "GroupRoot",
            "dynamic" : false,
            "enabled" : true,
            "target" : "group:3333f5d3-8c61-4d20-88a7-bb947705ba8a"
          },
          {
            "id" : "00000000-cb9d-4f7b-0001-ca38c5d643ea",
            "displayName" : "clone from api of debian group",
            "description" : "Some long description",
            "category" : "GroupRoot",
            "dynamic" : true,
            "enabled" : true,
            "target" : "group:00000000-cb9d-4f7b-0001-ca38c5d643ea"
          },
          {
            "id" : "5555f5d3-8c61-4d20-88a7-bb947705ba8a",
            "displayName" : "Nodes id divided by 3",
            "description" : "",
            "category" : "GroupRoot",
            "dynamic" : false,
            "enabled" : true,
            "target" : "group:5555f5d3-8c61-4d20-88a7-bb947705ba8a"
          },
          {
            "id" : "a-group-for-root-only",
            "displayName" : "Serveurs [€ðŋ] cassés",
            "description" : "Liste de l'ensemble de serveurs cassés à réparer",
            "category" : "GroupRoot",
            "dynamic" : true,
            "enabled" : true,
            "target" : "group:a-group-for-root-only"
          },
          {
            "id" : "all-nodes",
            "displayName" : "All nodes",
            "description" : "All nodes known by Rudder (including Rudder policy servers)",
            "category" : "GroupRoot",
            "dynamic" : false,
            "enabled" : true,
            "target" : "group:all-nodes"
          },
          {
            "id" : "4444f5d3-8c61-4d20-88a7-bb947705ba8a",
            "displayName" : "Odd nodes",
            "description" : "",
            "category" : "GroupRoot",
            "dynamic" : false,
            "enabled" : true,
            "target" : "group:4444f5d3-8c61-4d20-88a7-bb947705ba8a"
          },
          {
            "id" : "2222f5d3-8c61-4d20-88a7-bb947705ba8a",
            "displayName" : "only root",
            "description" : "",
            "category" : "GroupRoot",
            "dynamic" : false,
            "enabled" : true,
            "target" : "group:2222f5d3-8c61-4d20-88a7-bb947705ba8a"
          },
          {
            "id" : "1111f5d3-8c61-4d20-88a7-bb947705ba8a",
            "displayName" : "Empty group",
            "description" : "",
            "category" : "GroupRoot",
            "dynamic" : false,
            "enabled" : true,
            "target" : "group:1111f5d3-8c61-4d20-88a7-bb947705ba8a"
          }
        ],
        "targets" : [
          {
            "id" : "policyServer:root",
            "displayName" : "special:policyServer_root",
            "description" : "The root policy server",
            "enabled" : true,
            "target" : "policyServer:root"
          },
          {
            "id" : "special:all_exceptPolicyServers",
            "displayName" : "special:all_exceptPolicyServers",
            "description" : "All groups without policy servers",
            "enabled" : true,
            "target" : "special:all_exceptPolicyServers"
          },
          {
            "id" : "special:all",
            "displayName" : "special:all",
            "description" : "All nodes",
            "enabled" : true,
            "target" : "special:all"
          }
        ]
      }
    }
