<?xml version="1.0" encoding="UTF-8"?>

<!--
Copyright 2011 Normation SAS

This file is part of Rudder.

Rudder is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

In accordance with the terms of section 7 (7. Additional Terms.) of
the GNU General Public License version 3, the copyright holders add
the following Additional permissions:
Notwithstanding to the terms of section 5 (5. Conveying Modified Source
Versions) and 6 (6. Conveying Non-Source Forms.) of the GNU General
Public License version 3, when you create a Related Module, this
Related Module is not considered as a part of the work and may be
distributed under the license agreement of your choice.
A "Related Module" means a set of sources files including their
documentation that, without modification of the Source Code, enables
supplementary functions or services in addition to those offered by
the Software.

Rudder is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Rudder.  If not, see <http://www.gnu.org/licenses/>.

-->

<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

<!--    <global-method-security pre-post-annotations="enabled">-->
<!--         AspectJ pointcut expression that locates our "post" method and applies security that way-->
<!--        <protect-pointcut expression="execution(* bigbank.*Service.post*(..))" access="ROLE_TELLER"/>-->
<!--        -->
<!--    </global-method-security>-->
    <beans:bean id="userSessionInvalidationFilter" class="bootstrap.liftweb.UserSessionInvalidationFilter" />

    <http pattern="/style/**" security="none"/>
    <http pattern="/images/**" security="none"/>
    <http pattern="/javascript/**" security="none"/>
    <http pattern="/cache-**" security="none"/>

    <http pattern="/api/**" create-session="stateless" entry-point-ref="restAuthenticationEntryPoint">
      <intercept-url pattern='/**' access="hasRole('ROLE_REMOTE')" />
      <custom-filter position="BASIC_AUTH_FILTER" ref="restAuthenticationFilter" />
      <csrf disabled="true"/>
    </http>

    <http use-expressions="true" disable-url-rewriting="true" name="mainHttpSecurityFilters">
        <headers>
            <xss-protection disabled="true"/>
            <frame-options disabled="true"/>
        </headers>

        <csrf disabled="true"/>
        <session-management session-fixation-protection="migrateSession">
          <!--
            One can control the maximum concurrent session to have in parallel.
            Unfortunatly, it seems to be unbeliebely hard to make it a configurable property.
            One can add the control if wanted by uncommenting the line below.
          -->
          <!--
          <concurrency-control max-sessions="2" error-if-maximum-exceeded="true" />
          -->
        </session-management>
        <!--
           Comment to allows "no auth required", but the login form is still valid
           May be used for development or demo.
        -->
        <!-- Start comment -->

        <intercept-url pattern="/secure/**" access="isAuthenticated()" />

        <!-- End comment -->

        <!-- Default pattern: anonymous rights for all not-already matched URL -->
        <intercept-url pattern="/**" access="permitAll" />

        <form-login
            login-page="/index.html"
            login-processing-url="/j_spring_security_check"
            default-target-url="/secure/index.html"
            authentication-failure-handler-ref="rudderWebAuthenticationFailureHandler"
            always-use-default-target="false"
        />
<!--        <remember-me />-->

        <custom-filter after="BASIC_AUTH_FILTER" ref="userSessionInvalidationFilter" />

      <!--authorization-code/callback-->
    </http>


    <!--
      Other authentication beans, especially <authentication-manager>,
      are defined or imported in class bootstrap.liftweb.AppConfigAuth
    -->
</beans:beans>
