version = "3.5.9"
maxColumn = 130
runner.debug = true
runner.dialect = scala213

align.preset = most
align.multiline = true
align.tokens."+" = [
  {code = ":", owner = ".*"},
]
align.arrowEnumeratorGenerator = true
align.allowOverflow = true

docstrings.style = keep
#docstrings.wrapMaxColumn = 100
#docstrings.blankFirstLine = yes
lineEndings = preserve
includeCurlyBraceInSelectChains = false
danglingParentheses.preset = true
optIn.annotationNewlines = true
binPack.parentConstructors = Always
indentOperator.exemptScope = all
indentOperator.excludeRegex = "^.*$"
assumeStandardLibraryStripMargin = true

// try to have condensed lambda, but when multiline is needed,
// keep param with the open '{' :
// foo.map { x =>
//  ....
newlines.alwaysBeforeMultilineDef = false
newlines.beforeCurlyLambdaParams = multilineWithCaseOnly
newlines.afterCurlyLambdaParams = squash

rewrite.rules = [RedundantBraces, SortModifiers, PreferCurlyFors, Imports]
rewrite.redundantBraces.defnBodies = none // keep around def body
rewrite.redundantBraces.generalExpressions = false // keep {} around while/etc
rewrite.redundantBraces.stringInterpolation = false // keep {} in string interpol
// use () in place of {} for lambda when possible
rewrite.redundantBraces.parensForOneLineApply = true

// remove {} is there is only one line in the block
rewrite.redundantBraces.maxBreaks = 2
rewrite.insertBraces.minLines = 2
rewrite.insertBraces.allBlocks = true
// one import per line appart when renaming imported element
rewrite.imports.expand = true
rewrite.imports.sort = scalastyle

rewriteTokens = {
  "⇒": "=>"
  "→": "->"
  "←": "<-"
}

