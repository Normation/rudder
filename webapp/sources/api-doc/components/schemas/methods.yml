# SPDX-License-Identifier: CC-BY-SA-2.0
# SPDX-FileCopyrightText: 2013-2022 Normation SAS
type: object
description: List of available generic methods
required:
  - id
  - name
  - version
  - category
  - desc
  - documentation
  - parameters
  - agents
  - condition
  - deprecated
properties:
  id:
    type: string
    description: method id
    example: "package_present"
  name:
    type: string
    description: method name
    example: "Package present"
  version:
    type: string
    description: version of this technique
    example: "1.0"
  category:
    type: string
    description: category of this technique
    example: "user_techniques"
  desc:
    type: string
    description: description of this method
    example: "Enforce the presence of a package"
  documentation:
    type: string
    description: full documentation of this method
    example: "toto"
  parameters:
    type: array
    description: Parameters for this technique
    items:
      $ref:  '#/definitions/methodParameter'
  agents:
    type: array
    description: List of agents compatible with this method
    items:
      type: string
      description: name of an agent
      example: "dsc"
  condition:
    type: object
    description: condition generated by this method
    properties:
      prefix:
        type: string
        description: Prefix used to generate condition
        example: "package_present"
      parameter:
        type: string
        description: id of the parameter used to generate condition
        example: package
  deprecated:
    type: object
    description: Is this method deprecated ?
    properties:
      info:
        type: string
        description: Information notice about the deprecation, especially how to replace it
        example: "titi"
      replacedBy:
        type: string
        description: Id of the method replacing this method
        example: "tutu"
definitions:
  methodParameter:
    type: object
    required:
      - name
      - description
      - constraints
      - typ
    properties:
      name:
        type: string
        description: Parameter name
        example: "package"
      description:
        type: string
        description: description of this parameter
        example: "Name of a package to install"
      constraints:
        type: object
        required:
          - allow_empty_string
          - allow_whitespace_string
          - max_length
          - min_length
          - regex
          - not_regex
          - select
        properties:
          allow_empty_string:
            type: boolean
            description: can this parameter be empty ?
            example: false
          allow_whitespace_string:
            type: boolean
            description: can this parameter allow trailling/ending spaces, or even a full whitespace string ?
            example: true
          max_length:
            type: integer
            description: maximum size of a parameter
            example: 250
          min_length:
            type: integer
            description: minimal size of a parameter
            example: 5
          regex:
            type: string
            description: a regex to validate this parameter
            example: ".*"
          not_regex:
            type: string
            description: a regexp to invalidate this parameter
            example: "^c.*"
          select:
            type: array
            description: List of items authorized for this parameter
            items:
              type: string
              example: "!="
      typ:
        type: string
        description: Type of the parameter, probably just a string for now, but can be a dsc "HereString"
        example: "test"