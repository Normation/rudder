# generated by rudderc
# @name escaped
# @version 1.0
# @description rudderlang escaped for a complete loop

bundle agent escaped_technique {

  vars:
    "resources_dir"        string => "${this.promise_dirname}/resources";
    "args"                  slist => {};
    "report_param"         string => join("_", args);
    "full_class_prefix"    string => canonify("escaped_technique_${report_param}");
    "class_prefix"         string => string_head("${full_class_prefix}", "1000");

  methods:
    "Command execution_${report_data.directive_id}_0" usebundle => _method_reporting_context("Command execution", "echo \"Hello de Lu\" > /tmp/myfile-${sys.host}.txt"),
                                                             if => concat("any");
    "Command execution_${report_data.directive_id}_0" usebundle => command_execution("echo \"Hello de Lu\" > /tmp/myfile-${sys.host}.txt"),
                                                             if => concat("any");
    "Command execution result_${report_data.directive_id}_1" usebundle => _method_reporting_context("Command execution result", "rpm -qi gpg-pubkey-\\*|grep -E ^Packager|grep Innoflair"),
                                                                    if => concat("any.(SLES12|group_sdf_cmcs__sles12_|group_sbu_cmcs__sles12_|group_par_cmcs__sles12_)");
    "Command execution result_${report_data.directive_id}_1" usebundle => command_execution_result("rpm -qi gpg-pubkey-\\*|grep -E ^Packager|grep Innoflair", "0", "1"),
                                                                    if => concat("any.(SLES12|group_sdf_cmcs__sles12_|group_sbu_cmcs__sles12_|group_par_cmcs__sles12_)");
    "File replace lines_${report_data.directive_id}_2" usebundle => _method_reporting_context("File replace lines", "/etc/default/grub"),
                                                              if => concat("any");
    "File replace lines_${report_data.directive_id}_2" usebundle => file_replace_lines("/etc/default/grub", "^GRUB_TIMEOUT\\s+(0.+|[1-9].*)", "GRUB_TIMEOUT=0"),
                                                              if => concat("any");
}
