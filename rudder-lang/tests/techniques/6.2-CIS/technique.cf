# @name 6_2_cis_updated
# @description 
# @version 1.0
# @parameter {"name":"module","id":"ef3a3cc4-ce02-44b0-a280-d1b90876506a","description":""}

bundle agent 6_2_cis_updated(module)
{
  vars:
    "resources_dir" string => "${this.promise_dirname}/resources";
  methods:
    "Condition from variable existence_${report_data.directive_id}_0" usebundle => _method_reporting_context("Condition from variable existence", "skip_item_${report_data.canonified_directive_id}"),
                                                                             if => concat("any");
    "Condition from variable existence_${report_data.directive_id}_0" usebundle => condition_from_variable_existence("skip_item_${report_data.canonified_directive_id}", "node.properties[skip][${report_data.directive_id}]"),
                                                                             if => concat("any");
    "Kernel module configuration_${report_data.directive_id}_1" usebundle => _method_reporting_context("Kernel module configuration", "${module}"),
                                                                       if => concat("any.(skip_item_",canonify("${report_data.canonified_directive_id}"),"_false)");
    "Kernel module configuration_${report_data.directive_id}_1" usebundle => kernel_module_configuration("${module}", "install ${module} /bin/false"),
                                                                       if => concat("any.(skip_item_",canonify("${report_data.canonified_directive_id}"),"_false)");
    "Kernel module not loaded_${report_data.directive_id}_2" usebundle => _method_reporting_context("Kernel module not loaded", "${module}"),
                                                                    if => concat("any.(skip_item_",canonify("${report_data.canonified_directive_id}"),"_false)");
    "Kernel module not loaded_${report_data.directive_id}_2" usebundle => kernel_module_not_loaded("${module}"),
                                                                    if => concat("any.(skip_item_",canonify("${report_data.canonified_directive_id}"),"_false)");
}
